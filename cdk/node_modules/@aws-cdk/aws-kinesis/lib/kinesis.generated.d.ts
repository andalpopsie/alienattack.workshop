import cdk = require('@aws-cdk/cdk');
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
 */
export interface CfnStreamProps {
    /**
     * ``AWS::Kinesis::Stream.ShardCount``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount
     */
    shardCount: number | cdk.Token;
    /**
     * ``AWS::Kinesis::Stream.Name``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name
     */
    name?: string;
    /**
     * ``AWS::Kinesis::Stream.RetentionPeriodHours``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours
     */
    retentionPeriodHours?: number | cdk.Token;
    /**
     * ``AWS::Kinesis::Stream.StreamEncryption``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption
     */
    streamEncryption?: CfnStream.StreamEncryptionProperty | cdk.Token;
    /**
     * ``AWS::Kinesis::Stream.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
 */
export declare class CfnStream extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::Kinesis::Stream";
    /**
     * @cloudformation_attribute Arn
     */
    readonly streamArn: string;
    readonly streamId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::Kinesis::Stream``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnStreamProps);
    readonly propertyOverrides: CfnStreamProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnStream {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html
     */
    interface StreamEncryptionProperty {
        /**
         * ``CfnStream.StreamEncryptionProperty.EncryptionType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype
         */
        encryptionType: string;
        /**
         * ``CfnStream.StreamEncryptionProperty.KeyId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid
         */
        keyId: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html
 */
export interface CfnStreamConsumerProps {
    /**
     * ``AWS::Kinesis::StreamConsumer.ConsumerName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername
     */
    consumerName: string;
    /**
     * ``AWS::Kinesis::StreamConsumer.StreamARN``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn
     */
    streamArn: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html
 */
export declare class CfnStreamConsumer extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::Kinesis::StreamConsumer";
    /**
     * @cloudformation_attribute ConsumerARN
     */
    readonly streamConsumerConsumerArn: string;
    /**
     * @cloudformation_attribute ConsumerCreationTimestamp
     */
    readonly streamConsumerConsumerCreationTimestamp: string;
    /**
     * @cloudformation_attribute ConsumerName
     */
    readonly streamConsumerConsumerName: string;
    /**
     * @cloudformation_attribute ConsumerStatus
     */
    readonly streamConsumerConsumerStatus: string;
    /**
     * @cloudformation_attribute StreamARN
     */
    readonly streamConsumerStreamArn: string;
    readonly streamConsumerArn: string;
    /**
     * Creates a new ``AWS::Kinesis::StreamConsumer``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnStreamConsumerProps);
    readonly propertyOverrides: CfnStreamConsumerProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
