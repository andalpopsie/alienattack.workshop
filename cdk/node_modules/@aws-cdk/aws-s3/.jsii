{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-codepipeline-api": {
      "dependencies": {
        "@aws-cdk/aws-events": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "peer": true,
                      "targets": {
                        "dotnet": {
                          "assemblyOriginatorKeyFile": "../../key.snk",
                          "namespace": "Amazon.CDK.CXAPI",
                          "packageId": "Amazon.CDK.CXAPI",
                          "signAssembly": true
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk-cx-api",
                            "groupId": "software.amazon.awscdk"
                          },
                          "package": "software.amazon.awscdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.25.2"
                    }
                  },
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK",
                      "packageId": "Amazon.CDK",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.25.2"
                }
              },
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.AWS.IAM",
                  "packageId": "Amazon.CDK.AWS.IAM",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "iam",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.services.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.25.2"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.25.2"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.Events",
              "packageId": "Amazon.CDK.AWS.Events",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "events",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.events"
            },
            "js": {
              "npm": "@aws-cdk/aws-events"
            }
          },
          "version": "0.25.2"
        },
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.25.2"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.25.2"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Codepipeline.Api",
          "packageId": "Amazon.CDK.AWS.Codepipeline.Api",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "codepipeline-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codepipeline.api"
        },
        "js": {
          "npm": "@aws-cdk/aws-codepipeline-api"
        }
      },
      "version": "0.25.2"
    },
    "@aws-cdk/aws-events": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.25.2"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.25.2"
            }
          },
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.25.2"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        }
      },
      "version": "0.25.2"
    },
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.25.2"
    },
    "@aws-cdk/aws-kms": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "peer": true,
                  "targets": {
                    "dotnet": {
                      "assemblyOriginatorKeyFile": "../../key.snk",
                      "namespace": "Amazon.CDK.CXAPI",
                      "packageId": "Amazon.CDK.CXAPI",
                      "signAssembly": true
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk-cx-api",
                        "groupId": "software.amazon.awscdk"
                      },
                      "package": "software.amazon.awscdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.25.2"
                }
              },
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK",
                  "packageId": "Amazon.CDK",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.AWS.IAM",
              "packageId": "Amazon.CDK.AWS.IAM",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "iam",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.services.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.25.2"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        }
      },
      "version": "0.25.2"
    },
    "@aws-cdk/aws-s3-notifications": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "peer": true,
              "targets": {
                "dotnet": {
                  "assemblyOriginatorKeyFile": "../../key.snk",
                  "namespace": "Amazon.CDK.CXAPI",
                  "packageId": "Amazon.CDK.CXAPI",
                  "signAssembly": true
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk-cx-api",
                    "groupId": "software.amazon.awscdk"
                  },
                  "package": "software.amazon.awscdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.25.2"
            }
          },
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK",
              "packageId": "Amazon.CDK",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3.Notifications",
          "packageId": "Amazon.CDK.AWS.S3.Notifications",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-notifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.notifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-notifications"
        }
      },
      "version": "0.25.2"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "peer": true,
          "targets": {
            "dotnet": {
              "assemblyOriginatorKeyFile": "../../key.snk",
              "namespace": "Amazon.CDK.CXAPI",
              "packageId": "Amazon.CDK.CXAPI",
              "signAssembly": true
            },
            "java": {
              "maven": {
                "artifactId": "cdk-cx-api",
                "groupId": "software.amazon.awscdk"
              },
              "package": "software.amazon.awscdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.25.2"
        }
      },
      "peer": true,
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.25.2"
    }
  },
  "description": "CDK Constructs for AWS S3",
  "homepage": "https://github.com/awslabs/aws-cdk",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-s3",
  "readme": {
    "markdown": "## AWS S3 Construct Library\n\nDefine an unencrypted S3 bucket.\n\n```ts\nnew Bucket(this, 'MyFirstBucket');\n```\n\n`Bucket` constructs expose the following deploy-time attributes:\n\n * `bucketArn` - the ARN of the bucket (i.e. `arn:aws:s3:::bucket_name`)\n * `bucketName` - the name of the bucket (i.e. `bucket_name`)\n * `bucketUrl` - the URL of the bucket (i.e.\n   `https://s3.us-west-1.amazonaws.com/onlybucket`)\n * `arnForObjects(...pattern)` - the ARN of an object or objects within the\n   bucket (i.e.\n   `arn:aws:s3:::my_corporate_bucket/exampleobject.png` or\n   `arn:aws:s3:::my_corporate_bucket/Development/*`)\n * `urlForObject(key)` - the URL of an object within the bucket (i.e.\n   `https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey`)\n\n### Encryption\n\nDefine a KMS-encrypted bucket:\n\n```ts\nconst bucket = new Bucket(this, 'MyUnencryptedBucket', {\n    encryption: BucketEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n```\n\nUse `BucketEncryption.ManagedKms` to use the S3 master KMS key:\n\n```ts\nconst bucket = new Bucket(this, 'Buck', {\n    encryption: BucketEncryption.ManagedKms\n});\n\nassert(bucket.encryptionKey == null);\n```\n\n### Permissions\n\nA bucket policy will be automatically created for the bucket upon the first call to\n`addToResourcePolicy(statement)`:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.addToResourcePolicy(new iam.PolicyStatement()\n  .addActions('s3:GetObject')\n  .addResources(bucket.arnForObjects('file.txt'))\n  .addAccountRootPrincipal());\n```\n\nMost of the time, you won't have to manipulate the bucket policy directly.\nInstead, buckets have \"grant\" methods called to give prepackaged sets of permissions\nto other resources. For example:\n\n```ts\nconst lambda = new lambda.Function(this, 'Lambda', { /* ... */ });\n\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.grantReadWrite(lambda.role);\n```\n\nWill give the Lambda's execution role permissions to read and write\nfrom the bucket.\n\n### Buckets as sources in CodePipeline\n\nThis package also defines an Action that allows you to use a\nBucket as a source in CodePipeline:\n\n```ts\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport s3 = require('@aws-cdk/aws-s3');\n\nconst sourceBucket = new s3.Bucket(this, 'MyBucket', {\n  versioned: true, // a Bucket used as a source in CodePipeline must be versioned\n});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst sourceAction = new s3.PipelineSourceAction({\n  actionName: 'S3Source',\n  bucket: sourceBucket,\n  bucketKey: 'path/to/file.zip',\n});\npipeline.addStage({\n  name: 'Source',\n  actions: [sourceAction],\n});\n```\n\nYou can also create the action from the Bucket directly:\n\n```ts\n// equivalent to the code above:\nconst sourceAction = sourceBucket.toCodePipelineSourceAction({\n  actionName: 'S3Source',\n  bucketKey: 'path/to/file.zip',\n});\n```\n\nBy default, the Pipeline will poll the Bucket to detect changes.\nYou can change that behavior to use CloudWatch Events by setting the `pollForSourceChanges`\nproperty to `false` (it's `true` by default).\nIf you do that, make sure the source Bucket is part of an AWS CloudTrail Trail -\notherwise, the CloudWatch Events will not be emitted,\nand your Pipeline will not react to changes in the Bucket.\nYou can do it through the CDK:\n\n```typescript\nimport cloudtrail = require('@aws-cdk/aws-cloudtrail');\n\nconst key = 'some/key.zip';\nconst trail = new cloudtrail.CloudTrail(this, 'CloudTrail');\ntrail.addS3EventSelector([sourceBucket.arnForObjects(key)], cloudtrail.ReadWriteType.WriteOnly);\nconst sourceAction = sourceBucket.toCodePipelineSourceAction({\n  actionName: 'S3Source',\n  bucketKey: key,\n  pollForSourceChanges: false, // default: true\n});\n```\n\n### Buckets as deploy targets in CodePipeline\n\nThis package also defines an Action that allows you to use a\nBucket as a deployment target in CodePipeline:\n\n```ts\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport s3 = require('@aws-cdk/aws-s3');\n\nconst targetBucket = new s3.Bucket(this, 'MyBucket', {});\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst deployAction = new s3.PipelineDeployAction({\n  actionName: 'S3Deploy',\n  stage: deployStage,\n  bucket: targetBucket,\n  inputArtifact: sourceAction.outputArtifact,\n});\nconst deployStage = pipeline.addStage({\n  name: 'Deploy',\n  actions: [deployAction],\n});\n```\n\nYou can also create the action from the Bucket directly:\n\n```ts\n// equivalent to the code above:\nconst deployAction = targetBucket.toCodePipelineDeployAction({\n  actionName: 'S3Deploy',\n  extract: false, // default: true\n  objectKey: 'path/in/bucket', // required if extract is false\n  inputArtifact: sourceAction.outputArtifact,\n});\n```\n\n### Sharing buckets between stacks\n\nTo use a bucket in a different stack in the same CDK application, pass the object to the other stack:\n\n```ts\n\n/**\n * Stack that defines the bucket\n */\nclass Producer extends cdk.Stack {\n    public readonly myBucket: s3.Bucket;\n\n    constructor(scope: cdk.App, id: string, props?: cdk.StackProps) {\n        super(scope, id, props);\n\n        const bucket = new s3.Bucket(this, 'MyBucket', {\n          removalPolicy: cdk.RemovalPolicy.Destroy\n        });\n        this.myBucket = bucket;\n    }\n}\n\ninterface ConsumerProps extends cdk.StackProps {\n    userBucket: s3.IBucket;\n}\n\n/**\n * Stack that consumes the bucket\n */\nclass Consumer extends cdk.Stack {\n    constructor(scope: cdk.App, id: string, props: ConsumerProps) {\n        super(scope, id, props);\n\n        const user = new iam.User(this, 'MyUser');\n        props.userBucket.grantReadWrite(user);\n    }\n}\n\nconst producer = new Producer(app, 'ProducerStack');\nnew Consumer(app, 'ConsumerStack', { userBucket: producer.myBucket });\n```\n\n### Importing existing buckets\n\nTo import an existing bucket into your CDK application, use the `Bucket.import` factory method.  This method accepts a\n`BucketImportProps` which describes the properties of the already existing bucket:\n\n```ts\nconst bucket = Bucket.import(this, {\n    bucketArn: 'arn:aws:s3:::my-bucket'\n});\n\n// now you can just call methods on the bucket\nbucket.grantReadWrite(user);\n```\n\n### Bucket Notifications\n\nThe Amazon S3 notification feature enables you to receive notifications when\ncertain events happen in your bucket as described under [S3 Bucket\nNotifications] of the S3 Developer Guide.\n\nTo subscribe for bucket notifications, use the `bucket.onEvent` method. The\n`bucket.onObjectCreated` and `bucket.onObjectRemoved` can also be used for these\ncommon use cases.\n\nThe following example will subscribe an SNS topic to be notified of all\n``s3:ObjectCreated:*` events:\n\n```ts\nconst myTopic = new sns.Topic(this, 'MyTopic');\nbucket.onEvent(s3.EventType.ObjectCreated, myTopic);\n```\n\nThis call will also ensure that the topic policy can accept notifications for\nthis specific bucket.\n\nThe following destinations are currently supported:\n\n * `sns.Topic`\n * `sqs.Queue`\n * `lambda.Function`\n\nIt is also possible to specify S3 object key filters when subscribing. The\nfollowing example will notify `myQueue` when objects prefixed with `foo/` and\nhave the `.jpg` suffix are removed from the bucket.\n\n```ts\nbucket.onEvent(s3.EventType.ObjectRemoved, myQueue, { prefix: 'foo/', suffix: '.jpg' });\n```\n\n[S3 Bucket Notifications]: https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\n\n\n### Block Public Access\n\nUse `blockPublicAccess` to specify [block public access settings] on the bucket.\n\nEnable all block public access settings:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BlockAll\n});\n```\n\nBlock and ignore public ACLs:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: BlockPublicAccess.BlockAcls\n});\n```\n\nAlternatively, specify the settings manually:\n```ts\nconst bucket = new Bucket(this, 'MyBlockedBucket', {\n    blockPublicAccess: new BlockPublicAccess({ blockPublicPolicy: true })\n});\n```\n\nWhen `blockPublicPolicy` is set to `true`, `grantPublicRead()` throws an error.\n\n[block public access settings]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/awslabs/aws-cdk.git"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.S3",
      "packageId": "Amazon.CDK.AWS.S3",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "s3",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.s3"
    },
    "js": {
      "npm": "@aws-cdk/aws-s3"
    }
  },
  "types": {
    "@aws-cdk/aws-s3.BlockPublicAccess": {
      "assembly": "@aws-cdk/aws-s3",
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccess",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BlockPublicAccess",
      "properties": [
        {
          "const": true,
          "immutable": true,
          "name": "BlockAcls",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "BlockAll",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess"
          }
        },
        {
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BlockPublicAccessOptions": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BlockPublicAccessOptions",
      "kind": "interface",
      "name": "BlockPublicAccessOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to block public ACLs",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to block public policy",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to ignore public ACLs",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to restrict public access",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-options"
          },
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.Bucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/aws-s3.BucketBase"
      },
      "docs": {
        "comment": "An S3 bucket with associated policy objects\n\nThis bucket does not yet have all features that exposed by the underlying\nBucketResource."
      },
      "fqn": "@aws-cdk/aws-s3.Bucket",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "A `BucketAttributes` object. Can be obtained from a call to\n`bucket.export()` or manually created."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketImportProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Add a lifecycle rule to the bucket"
          },
          "name": "addLifecycleRule",
          "parameters": [
            {
              "docs": {
                "comment": "The rule to add"
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "docs": {
            "comment": "Adds a bucket notification event destination.",
            "example": "bucket.onEvent(EventType.OnObjectCreated, myLambda, 'home/myusername/*')",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html"
          },
          "name": "onEvent",
          "parameters": [
            {
              "docs": {
                "comment": "The event to trigger the notification"
              },
              "name": "event",
              "type": {
                "fqn": "@aws-cdk/aws-s3.EventType"
              }
            },
            {
              "docs": {
                "comment": "The notification destination (Lambda, SNS Topic or SQS Queue)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "S3 object key filter rules to determine which objects\ntrigger this event. Each filter must include a `prefix` and/or `suffix`\nthat will be matched against the s3 object key. Refer to the S3 Developer Guide\nfor details about allowed filter rules."
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Subscribes a destination to receive notificatins when an object is\ncreated in the bucket. This is identical to calling\n`onEvent(EventType.ObjectCreated)`."
          },
          "name": "onObjectCreated",
          "parameters": [
            {
              "docs": {
                "comment": "The notification destination (see onEvent)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "Filters (see onEvent)"
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Subscribes a destination to receive notificatins when an object is\nremoved from the bucket. This is identical to calling\n`onEvent(EventType.ObjectRemoved)`."
          },
          "name": "onObjectRemoved",
          "parameters": [
            {
              "docs": {
                "comment": "The notification destination (see onEvent)"
              },
              "name": "dest",
              "type": {
                "fqn": "@aws-cdk/aws-s3-notifications.IBucketNotificationDestination"
              }
            },
            {
              "docs": {
                "comment": "Filters (see onEvent)"
              },
              "name": "filters",
              "type": {
                "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter"
              },
              "variadic": true
            }
          ],
          "variadic": true
        }
      ],
      "name": "Bucket",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "dualstackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Whether to disallow public access"
          },
          "name": "disallowPublicAccess",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "protected": true,
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.BucketBase"
          },
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n   new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n   Bucket.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n   const ref = myBucket.export();\n   Bucket.import(this, 'MyImportedBucket', ref);"
      },
      "fqn": "@aws-cdk/aws-s3.BucketBase",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The scope in which to define this construct"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "The scoped construct ID. Must be unique amongst siblings. If\nthe ID includes a path separator (`/`), then it will be replaced by double\ndash `--`."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-s3.IBucket"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n   arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "docs": {
            "comment": "Grants s3:DeleteObject* permission to an IAM pricipal for objects\nin this bucket."
          },
          "name": "grantDelete",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allows unrestricted access to objects from this bucket.\n\nIMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.PolicyStatement` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const statement = bucket.grantPublicAccess();\n     statement.addCondition('IpAddress', { \"aws:SourceIp\": \"54.240.143.0/24\" });",
            "return": "The `iam.PolicyStatement` object, which can be used to apply e.g. conditions."
          },
          "name": "grantPublicAccess",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the set of S3 actions to allow. Default is \"s3:GetObject\"."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.PolicyStatement"
          },
          "variadic": true
        },
        {
          "docs": {
            "comment": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantPut",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grant read permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal."
          },
          "name": "grantRead",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grant write permissions to this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantWrite",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Defines a CloudWatch Event Rule that triggers upon putting an object into the Bucket."
          },
          "name": "onPutObject",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "name": "path",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRule"
          }
        },
        {
          "docs": {
            "comment": "Convenience method for creating a new {@link PipelineDeployAction}."
          },
          "name": "toCodePipelineDeployAction",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.CommonPipelineDeployActionProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.PipelineDeployAction"
          }
        },
        {
          "docs": {
            "comment": "Convenience method for creating a new {@link PipelineSourceAction}."
          },
          "name": "toCodePipelineSourceAction",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.CommonPipelineSourceActionProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.PipelineSourceAction"
          }
        },
        {
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "return": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "BucketBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether to disallow public access"
          },
          "name": "disallowPublicAccess",
          "protected": true,
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "overrides": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          },
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketEncryption": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "What kind of server-side encryption to apply to this bucket"
      },
      "fqn": "@aws-cdk/aws-s3.BucketEncryption",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Objects in the bucket are not encrypted."
          },
          "name": "Unencrypted"
        },
        {
          "docs": {
            "comment": "Server-side KMS encryption with a master key managed by KMS."
          },
          "name": "KmsManaged"
        },
        {
          "docs": {
            "comment": "Server-side encryption with a master key managed by S3."
          },
          "name": "S3Managed"
        },
        {
          "docs": {
            "comment": "Server-side encryption with a KMS key managed by the user.\nIf `encryptionKey` is specified, this key will be used, otherwise, one will be defined."
          },
          "name": "Kms"
        }
      ],
      "name": "BucketEncryption"
    },
    "@aws-cdk/aws-s3.BucketImportProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "A reference to a bucket. The easiest way to instantiate is to call\n`bucket.export()`. Then, the consumer can use `Bucket.import(this, ref)` and\nget a `Bucket`."
      },
      "fqn": "@aws-cdk/aws-s3.BucketImportProps",
      "kind": "interface",
      "name": "BucketImportProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket. At least one of bucketArn or bucketName must be\ndefined in order to initialize a bucket ref."
          },
          "name": "bucketArn",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain name of the bucket.",
            "default": "Inferred from bucket name"
          },
          "name": "bucketDomainName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket. If the underlying value of ARN is a string, the\nname will be parsed from the ARN. Otherwise, the name is optional, but\nsome features that require the bucket name such as auto-creating a bucket\npolicy, won't work."
          },
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The format of the website URL of the bucket. This should be true for\nregions launched since 2014.",
            "default": "false"
          },
          "name": "bucketWebsiteNewUrlFormat",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The website URL of the bucket (if static web hosting is enabled).",
            "default": "Inferred from bucket name"
          },
          "name": "bucketWebsiteUrl",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketPolicy",
      "properties": [
        {
          "docs": {
            "comment": "A policy document containing permissions to add to the specified bucket.\nFor more information, see Access Policy Language Overview in the Amazon\nSimple Storage Service Developer Guide."
          },
          "immutable": true,
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketPolicyProps",
      "kind": "interface",
      "name": "BucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The Amazon S3 bucket that the policy applies to."
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketProps",
      "kind": "interface",
      "name": "BucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The block public access configuration of this bucket.",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html"
          },
          "name": "blockPublicAccess",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BlockPublicAccess",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Physical name of this bucket.",
            "default": "Assigned by CloudFormation (recommended)"
          },
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The kind of server-side encryption to apply to this bucket.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "default": "Unencrypted"
          },
          "name": "encryption",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketEncryption",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "External KMS key to use for bucket encryption.\n\nThe 'encryption' property must be either not specified or set to \"Kms\".\nAn error will be emitted if encryption is set to \"Unencrypted\" or\n\"Managed\".",
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Rules that define how Amazon S3 manages objects during their lifetime.",
            "default": "No lifecycle rules"
          },
          "name": "lifecycleRules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants public read access to all objects in the bucket.\nSimilar to calling `bucket.grantPublicAccess()`"
          },
          "name": "publicReadAccess",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Policy to apply when the bucket is removed from this stack.",
            "default": "The bucket will be orphaned"
          },
          "name": "removalPolicy",
          "type": {
            "fqn": "@aws-cdk/cdk.RemovalPolicy",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether this bucket should have versioning turned on or not.",
            "default": "false"
          },
          "name": "versioned",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the error document (e.g. \"404.html\") for the website.\n`websiteIndexDocument` must also be set if this is set."
          },
          "name": "websiteErrorDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the index document (e.g. \"index.html\") for the website. Enables static website\nhosting for this bucket."
          },
          "name": "websiteIndexDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::S3::Bucket``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.Resource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnBucket",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Arn"
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DomainName"
          },
          "immutable": true,
          "name": "bucketDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DualStackDomainName"
          },
          "immutable": true,
          "name": "bucketDualStackDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "RegionalDomainName"
          },
          "immutable": true,
          "name": "bucketRegionalDomainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "WebsiteURL"
          },
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-s3.CfnBucketProps"
          }
        },
        {
          "docs": {
            "comment": "The ``TagManager`` handles setting, removing and formatting tags\n\nTags should be managed either passing them as properties during\ninitiation or by calling methods on this object. If both techniques are\nused only the tags from the TagManager will be used. ``Tag`` (aspect)\nwill use the manager."
          },
          "immutable": true,
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/cdk.TagManager"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty",
      "kind": "interface",
      "name": "AbortIncompleteMultipartUploadProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AbortIncompleteMultipartUploadProperty.DaysAfterInitiation``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html#cfn-s3-bucket-abortincompletemultipartupload-daysafterinitiation"
          },
          "name": "daysAfterInitiation",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty",
      "kind": "interface",
      "name": "AccelerateConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AccelerateConfigurationProperty.AccelerationStatus``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accelerationstatus"
          },
          "name": "accelerationStatus",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty",
      "kind": "interface",
      "name": "AccessControlTranslationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AccessControlTranslationProperty.Owner``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html#cfn-s3-bucket-accesscontroltranslation-owner"
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty",
      "kind": "interface",
      "name": "AnalyticsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AnalyticsConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-id"
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AnalyticsConfigurationProperty.StorageClassAnalysis``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-storageclassanalysis"
          },
          "name": "storageClassAnalysis",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AnalyticsConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.AnalyticsConfigurationProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty",
      "kind": "interface",
      "name": "BucketEncryptionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.BucketEncryptionProperty.ServerSideEncryptionConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-serversideencryptionconfiguration"
          },
          "name": "serverSideEncryptionConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty",
      "kind": "interface",
      "name": "CorsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsConfigurationProperty.CorsRules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html#cfn-s3-bucket-cors-corsrule"
          },
          "name": "corsRules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsRuleProperty",
      "kind": "interface",
      "name": "CorsRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.AllowedMethods``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedmethods"
          },
          "name": "allowedMethods",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.AllowedOrigins``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedorigins"
          },
          "name": "allowedOrigins",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.AllowedHeaders``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedheaders"
          },
          "name": "allowedHeaders",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.ExposedHeaders``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-exposedheaders"
          },
          "name": "exposedHeaders",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.CorsRuleProperty.MaxAge``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-maxage"
          },
          "name": "maxAge",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DataExportProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty",
      "kind": "interface",
      "name": "DataExportProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DataExportProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DataExportProperty.OutputSchemaVersion``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-outputschemaversion"
          },
          "name": "outputSchemaVersion",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.DestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty",
      "kind": "interface",
      "name": "DestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DestinationProperty.BucketArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketarn"
          },
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DestinationProperty.Format``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-format"
          },
          "name": "format",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DestinationProperty.BucketAccountId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketaccountid"
          },
          "name": "bucketAccountId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.DestinationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty",
      "kind": "interface",
      "name": "EncryptionConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.EncryptionConfigurationProperty.ReplicaKmsKeyID``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html#cfn-s3-bucket-encryptionconfiguration-replicakmskeyid"
          },
          "name": "replicaKmsKeyId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty",
      "kind": "interface",
      "name": "FilterRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.FilterRuleProperty.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-name"
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.FilterRuleProperty.Value``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-value"
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty",
      "kind": "interface",
      "name": "InventoryConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.Enabled``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-enabled"
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-id"
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.IncludedObjectVersions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-includedobjectversions"
          },
          "name": "includedObjectVersions",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.ScheduleFrequency``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-schedulefrequency"
          },
          "name": "scheduleFrequency",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.OptionalFields``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-optionalfields"
          },
          "name": "optionalFields",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.InventoryConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty",
      "kind": "interface",
      "name": "LambdaConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LambdaConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-event"
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LambdaConfigurationProperty.Function``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-function"
          },
          "name": "function",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LambdaConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty",
      "kind": "interface",
      "name": "LifecycleConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LifecycleConfigurationProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html#cfn-s3-bucket-lifecycleconfig-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty",
      "kind": "interface",
      "name": "LoggingConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LoggingConfigurationProperty.DestinationBucketName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-destinationbucketname"
          },
          "name": "destinationBucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.LoggingConfigurationProperty.LogFilePrefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-logfileprefix"
          },
          "name": "logFilePrefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty",
      "kind": "interface",
      "name": "MetricsConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.MetricsConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-id"
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.MetricsConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.MetricsConfigurationProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty",
      "kind": "interface",
      "name": "NoncurrentVersionTransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NoncurrentVersionTransitionProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-storageclass"
          },
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NoncurrentVersionTransitionProperty.TransitionInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-transitionindays"
          },
          "name": "transitionInDays",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty",
      "kind": "interface",
      "name": "NotificationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NotificationConfigurationProperty.LambdaConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig"
          },
          "name": "lambdaConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.LambdaConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NotificationConfigurationProperty.QueueConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-queueconfig"
          },
          "name": "queueConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NotificationConfigurationProperty.TopicConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-topicconfig"
          },
          "name": "topicConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty",
      "kind": "interface",
      "name": "NotificationFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.NotificationFilterProperty.S3Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key"
          },
          "name": "s3Key",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty",
      "kind": "interface",
      "name": "PublicAccessBlockConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicAcls``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicacls"
          },
          "name": "blockPublicAcls",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.PublicAccessBlockConfigurationProperty.BlockPublicPolicy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-blockpublicpolicy"
          },
          "name": "blockPublicPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.PublicAccessBlockConfigurationProperty.IgnorePublicAcls``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-ignorepublicacls"
          },
          "name": "ignorePublicAcls",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.PublicAccessBlockConfigurationProperty.RestrictPublicBuckets``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html#cfn-s3-bucket-publicaccessblockconfiguration-restrictpublicbuckets"
          },
          "name": "restrictPublicBuckets",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.QueueConfigurationProperty",
      "kind": "interface",
      "name": "QueueConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.QueueConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-event"
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.QueueConfigurationProperty.Queue``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-queue"
          },
          "name": "queue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.QueueConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty",
      "kind": "interface",
      "name": "RedirectAllRequestsToProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectAllRequestsToProperty.HostName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-hostname"
          },
          "name": "hostName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectAllRequestsToProperty.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-protocol"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty",
      "kind": "interface",
      "name": "RedirectRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectRuleProperty.HostName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-hostname"
          },
          "name": "hostName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectRuleProperty.HttpRedirectCode``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-httpredirectcode"
          },
          "name": "httpRedirectCode",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectRuleProperty.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-protocol"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectRuleProperty.ReplaceKeyPrefixWith``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeyprefixwith"
          },
          "name": "replaceKeyPrefixWith",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RedirectRuleProperty.ReplaceKeyWith``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeywith"
          },
          "name": "replaceKeyWith",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty",
      "kind": "interface",
      "name": "ReplicationConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationConfigurationProperty.Role``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-role"
          },
          "name": "role",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationConfigurationProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty",
      "kind": "interface",
      "name": "ReplicationDestinationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationDestinationProperty.Bucket``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-bucket"
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationDestinationProperty.AccessControlTranslation``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-accesscontroltranslation"
          },
          "name": "accessControlTranslation",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccessControlTranslationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationDestinationProperty.Account``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-account"
          },
          "name": "account",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationDestinationProperty.EncryptionConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-encryptionconfiguration"
          },
          "name": "encryptionConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.EncryptionConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationDestinationProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-storageclass"
          },
          "name": "storageClass",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationRuleProperty",
      "kind": "interface",
      "name": "ReplicationRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationRuleProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationDestinationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationRuleProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-prefix"
          },
          "name": "prefix",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationRuleProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-status"
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationRuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ReplicationRuleProperty.SourceSelectionCriteria``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-sourceselectioncriteria"
          },
          "name": "sourceSelectionCriteria",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty",
      "kind": "interface",
      "name": "RoutingRuleConditionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RoutingRuleConditionProperty.HttpErrorCodeReturnedEquals``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-httperrorcodereturnedequals"
          },
          "name": "httpErrorCodeReturnedEquals",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RoutingRuleConditionProperty.KeyPrefixEquals``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-keyprefixequals"
          },
          "name": "keyPrefixEquals",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty",
      "kind": "interface",
      "name": "RoutingRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RoutingRuleProperty.RedirectRule``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-redirectrule"
          },
          "name": "redirectRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectRuleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RoutingRuleProperty.RoutingRuleCondition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition"
          },
          "name": "routingRuleCondition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleConditionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.RuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.RuleProperty",
      "kind": "interface",
      "name": "RuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status"
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.AbortIncompleteMultipartUpload``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload"
          },
          "name": "abortIncompleteMultipartUpload",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AbortIncompleteMultipartUploadProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.ExpirationDate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate"
          },
          "name": "expirationDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.ExpirationInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays"
          },
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.NoncurrentVersionExpirationInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays"
          },
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.NoncurrentVersionTransition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
          },
          "name": "noncurrentVersionTransition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.NoncurrentVersionTransitions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions"
          },
          "name": "noncurrentVersionTransitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.NoncurrentVersionTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.Transition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition"
          },
          "name": "transition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.RuleProperty.Transitions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions"
          },
          "name": "transitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.S3KeyFilterProperty",
      "kind": "interface",
      "name": "S3KeyFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.S3KeyFilterProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.FilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionByDefaultProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ServerSideEncryptionByDefaultProperty.SSEAlgorithm``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-ssealgorithm"
          },
          "name": "sseAlgorithm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ServerSideEncryptionByDefaultProperty.KMSMasterKeyID``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-kmsmasterkeyid"
          },
          "name": "kmsMasterKeyId",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionRuleProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionRuleProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.ServerSideEncryptionRuleProperty.ServerSideEncryptionByDefault``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html#cfn-s3-bucket-serversideencryptionrule-serversideencryptionbydefault"
          },
          "name": "serverSideEncryptionByDefault",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ServerSideEncryptionByDefaultProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SourceSelectionCriteriaProperty",
      "kind": "interface",
      "name": "SourceSelectionCriteriaProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.SourceSelectionCriteriaProperty.SseKmsEncryptedObjects``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html#cfn-s3-bucket-sourceselectioncriteria-ssekmsencryptedobjects"
          },
          "name": "sseKmsEncryptedObjects",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.SseKmsEncryptedObjectsProperty",
      "kind": "interface",
      "name": "SseKmsEncryptedObjectsProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.SseKmsEncryptedObjectsProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html#cfn-s3-bucket-ssekmsencryptedobjects-status"
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.StorageClassAnalysisProperty",
      "kind": "interface",
      "name": "StorageClassAnalysisProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.StorageClassAnalysisProperty.DataExport``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html#cfn-s3-bucket-storageclassanalysis-dataexport"
          },
          "name": "dataExport",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.DataExportProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TagFilterProperty",
      "kind": "interface",
      "name": "TagFilterProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TagFilterProperty.Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-key"
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TagFilterProperty.Value``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-value"
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TopicConfigurationProperty",
      "kind": "interface",
      "name": "TopicConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TopicConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-event"
          },
          "name": "event",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TopicConfigurationProperty.Topic``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-topic"
          },
          "name": "topic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TopicConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.TransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.TransitionProperty",
      "kind": "interface",
      "name": "TransitionProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TransitionProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-storageclass"
          },
          "name": "storageClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TransitionProperty.TransitionDate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitiondate"
          },
          "name": "transitionDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.TransitionProperty.TransitionInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitionindays"
          },
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty",
      "kind": "interface",
      "name": "VersioningConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.VersioningConfigurationProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html#cfn-s3-bucket-versioningconfig-status"
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty",
      "kind": "interface",
      "name": "WebsiteConfigurationProperty",
      "namespace": "CfnBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.WebsiteConfigurationProperty.ErrorDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-errordocument"
          },
          "name": "errorDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.WebsiteConfigurationProperty.IndexDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-indexdocument"
          },
          "name": "indexDocument",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.WebsiteConfigurationProperty.RedirectAllRequestsTo``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-redirectallrequeststo"
          },
          "name": "redirectAllRequestsTo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.RedirectAllRequestsToProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``CfnBucket.WebsiteConfigurationProperty.RoutingRules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-routingrules"
          },
          "name": "routingRules",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.RoutingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::S3::BucketPolicy``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "scope in which this resource is defined"
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "scoped id of the resource"
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "resource properties"
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "overrides": {
            "fqn": "@aws-cdk/cdk.Resource"
          },
          "parameters": [
            {
              "name": "properties",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CfnBucketPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "propertyOverrides",
          "type": {
            "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketPolicyProps",
      "kind": "interface",
      "name": "CfnBucketPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::BucketPolicy.Bucket``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-bucket"
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::BucketPolicy.PolicyDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-policydocument"
          },
          "name": "policyDocument",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CfnBucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.CfnBucketProps",
      "kind": "interface",
      "name": "CfnBucketProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.AccelerateConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration"
          },
          "name": "accelerateConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.AccelerateConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.AccessControl``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol"
          },
          "name": "accessControl",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.AnalyticsConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations"
          },
          "name": "analyticsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.AnalyticsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.BucketEncryption``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-bucketencryption"
          },
          "name": "bucketEncryption",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.BucketEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.BucketName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-name"
          },
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.CorsConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-crossoriginconfig"
          },
          "name": "corsConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.CorsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.InventoryConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations"
          },
          "name": "inventoryConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.InventoryConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.LifecycleConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-lifecycleconfig"
          },
          "name": "lifecycleConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LifecycleConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.LoggingConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig"
          },
          "name": "loggingConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.LoggingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.MetricsConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-metricsconfigurations"
          },
          "name": "metricsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.CfnBucket.MetricsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.NotificationConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-notification"
          },
          "name": "notificationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.NotificationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.PublicAccessBlockConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration"
          },
          "name": "publicAccessBlockConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.PublicAccessBlockConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.ReplicationConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-replicationconfiguration"
          },
          "name": "replicationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.ReplicationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.CfnTag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.VersioningConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning"
          },
          "name": "versioningConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.VersioningConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "``AWS::S3::Bucket.WebsiteConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-websiteconfiguration"
          },
          "name": "websiteConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.CfnBucket.WebsiteConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CommonPipelineDeployActionProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Common properties for creating {@link PipelineDeployAction} -\neither directly, through its constructor,\nor through {@link IBucket#toCodePipelineDeployAction}."
      },
      "fqn": "@aws-cdk/aws-s3.CommonPipelineDeployActionProps",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-codepipeline-api.CommonActionProps"
        }
      ],
      "kind": "interface",
      "name": "CommonPipelineDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The inputArtifact to deploy to Amazon S3."
          },
          "name": "inputArtifact",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline-api.Artifact"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Should the deploy action extract the artifact before deploying to Amazon S3.",
            "default": "true"
          },
          "name": "extract",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The key of the target object. This is required if extract is false."
          },
          "name": "objectKey",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.CommonPipelineSourceActionProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Common properties for creating {@link PipelineSourceAction} -\neither directly, through its constructor,\nor through {@link IBucket#toCodePipelineSourceAction}."
      },
      "fqn": "@aws-cdk/aws-s3.CommonPipelineSourceActionProps",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-codepipeline-api.CommonActionProps"
        }
      ],
      "kind": "interface",
      "name": "CommonPipelineSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The key within the S3 bucket that stores the source code.",
            "example": "'path/to/file.zip'"
          },
          "name": "bucketKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the source's output artifact. Output artifacts are used by CodePipeline as\ninputs into other actions.",
            "default": "a name will be auto-generated"
          },
          "name": "outputArtifactName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether AWS CodePipeline should poll for source changes.\nIf this is `false`, the Pipeline will use CloudWatch Events to detect source changes instead.\nNote that if this is `false`, you need to make sure to include the source Bucket in a CloudTrail Trail,\nas otherwise the CloudWatch Events will not be emitted.",
            "default": "true",
            "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/log-s3-data-events.html"
          },
          "name": "pollForSourceChanges",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.EventType": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "Notification event types."
      },
      "fqn": "@aws-cdk/aws-s3.EventType",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreated"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedPut"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedPost"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedCopy"
        },
        {
          "docs": {
            "comment": "Amazon S3 APIs such as PUT, POST, and COPY can create an object. Using\nthese event types, you can enable notification when an object is created\nusing a specific API, or you can use the s3:ObjectCreated:* event type to\nrequest notification regardless of the API that was used to create an\nobject."
          },
          "name": "ObjectCreatedCompleteMultipartUpload"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemoved"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemovedDelete"
        },
        {
          "docs": {
            "comment": "By using the ObjectRemoved event types, you can enable notification when\nan object or a batch of objects is removed from a bucket.\n\nYou can request notification when an object is deleted or a versioned\nobject is permanently deleted by using the s3:ObjectRemoved:Delete event\ntype. Or you can request notification when a delete marker is created for\na versioned object by using s3:ObjectRemoved:DeleteMarkerCreated. For\ninformation about deleting versioned objects, see Deleting Object\nVersions. You can also use a wildcard s3:ObjectRemoved:* to request\nnotification anytime an object is deleted.\n\nYou will not receive event notifications from automatic deletes from\nlifecycle policies or from failed operations."
          },
          "name": "ObjectRemovedDeleteMarkerCreated"
        },
        {
          "docs": {
            "comment": "You can use this event type to request Amazon S3 to send a notification\nmessage when Amazon S3 detects that an object of the RRS storage class is\nlost."
          },
          "name": "ReducedRedundancyLostObject"
        }
      ],
      "name": "EventType"
    },
    "@aws-cdk/aws-s3.IBucket": {
      "assembly": "@aws-cdk/aws-s3",
      "fqn": "@aws-cdk/aws-s3.IBucket",
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IConstruct"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n   arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "primitive": "string"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketImportProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants s3:DeleteObject* permission to an IAM pricipal for objects\nin this bucket."
          },
          "name": "grantDelete",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Allows unrestricted access to objects from this bucket.\n\nIMPORTANT: This permission allows anyone to perform actions on S3 objects\nin this bucket, which is useful for when you configure your bucket as a\nwebsite and want everyone to be able to read objects in the bucket without\nneeding to authenticate.\n\nWithout arguments, this method will grant read (\"s3:GetObject\") access to\nall objects (\"*\") in the bucket.\n\nThe method returns the `iam.PolicyStatement` object, which can then be modified\nas needed. For example, you can add a condition that will restrict access only\nto an IPv4 range like this:\n\n     const statement = bucket.grantPublicAccess();\n     statement.addCondition('IpAddress', { \"aws:SourceIp\": \"54.240.143.0/24\" });",
            "return": "The `iam.PolicyStatement` object, which can be used to apply e.g. conditions."
          },
          "name": "grantPublicAccess",
          "parameters": [
            {
              "docs": {
                "comment": "the prefix of S3 object keys (e.g. `home/*`). Default is \"*\"."
              },
              "name": "keyPrefix",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the set of S3 actions to allow. Default is \"s3:GetObject\"."
              },
              "name": "allowedActions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-iam.PolicyStatement"
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants s3:PutObject* and s3:Abort* permissions for this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantPut",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant read permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf encryption is used, permission to use the key to decrypt the contents\nof the bucket will also be granted to the same principal."
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Grant write permissions to this bucket to an IAM principal.\n\nIf encryption is used, permission to use the key to encrypt the contents\nof written files will also be granted to the same principal."
          },
          "name": "grantWrite",
          "parameters": [
            {
              "docs": {
                "comment": "The principal"
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "Restrict the permission to a certain key pattern (default '*')"
              },
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Defines a CloudWatch Event Rule that triggers upon putting an object into the Bucket.",
            "return": "a new {@link events.EventRule} instance"
          },
          "name": "onPutObject",
          "parameters": [
            {
              "docs": {
                "comment": "the logical ID of the newly created Event Rule"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the optional target of the Event Rule"
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTarget",
                "optional": true
              }
            },
            {
              "docs": {
                "comment": "the optional path inside the Bucket that will be watched for changes"
              },
              "name": "path",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Convenience method for creating a new {@link PipelineDeployAction}.",
            "return": "the newly created {@link PipelineDeployAction}"
          },
          "name": "toCodePipelineDeployAction",
          "parameters": [
            {
              "docs": {
                "comment": "the construction properties of the new Action"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.CommonPipelineDeployActionProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.PipelineDeployAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Convenience method for creating a new {@link PipelineSourceAction}.",
            "return": "the newly created {@link PipelineSourceAction}"
          },
          "name": "toCodePipelineSourceAction",
          "parameters": [
            {
              "docs": {
                "comment": "the construction properties of the new Action"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.CommonPipelineSourceActionProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.PipelineSourceAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "return": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "IBucket",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The domain of the bucket."
          },
          "immutable": true,
          "name": "domainName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IEncryptionKey",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.LifecycleRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Declaration of a Life cycle rule"
      },
      "fqn": "@aws-cdk/aws-s3.LifecycleRule",
      "kind": "interface",
      "name": "LifecycleRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket.\n\nThe AbortIncompleteMultipartUpload property type creates a lifecycle\nrule that aborts incomplete multipart uploads to an Amazon S3 bucket.\nWhen Amazon S3 aborts a multipart upload, it deletes all parts\nassociated with the multipart upload.",
            "default": "Incomplete uploads are never aborted"
          },
          "name": "abortIncompleteMultipartUploadAfterDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether this rule is enabled.",
            "default": "true"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration date"
          },
          "name": "expirationDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration timeout"
          },
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "A unique identifier for this rule. The value cannot be more than 255 characters."
          },
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire.\n\nFor buckets with versioning enabled (or suspended), specifies the time,\nin days, between when a new version of the object is uploaded to the\nbucket and when old versions of the object expire. When object versions\nexpire, Amazon S3 permanently deletes them. If you specify a transition\nand expiration time, the expiration time must be later than the\ntransition time.",
            "default": "No noncurrent version expiration"
          },
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "One or more transition rules that specify when non-current objects transition to a specified storage class.\n\nOnly for for buckets with versioning enabled (or suspended).\n\nIf you specify a transition and expiration time, the expiration time\nmust be later than the transition time."
          },
          "name": "noncurrentVersionTransitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Object key prefix that identifies one or more objects to which this rule applies.",
            "default": "Rule applies to all objects"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket.",
            "default": "Rule applies to all objects"
          },
          "name": "tagFilters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "One or more transition rules that specify when an object transitions to a specified storage class.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No transition rules"
          },
          "name": "transitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.Transition"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NoncurrentVersionTransition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when noncurrent versions transition to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition",
      "kind": "interface",
      "name": "NoncurrentVersionTransition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "name": "transitionInDays",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NotificationKeyFilter": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.NotificationKeyFilter",
      "kind": "interface",
      "name": "NotificationKeyFilter",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "S3 keys must have the specified prefix."
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "S3 keys must have the specified suffix."
          },
          "name": "suffix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.PipelineDeployAction": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/aws-codepipeline-api.DeployAction"
      },
      "docs": {
        "comment": "Deploys the sourceArtifact to Amazon S3."
      },
      "fqn": "@aws-cdk/aws-s3.PipelineDeployAction",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.PipelineDeployActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "The method called when an Action is attached to a Pipeline.\nThis method is guaranteed to be called only once for each Action instance."
          },
          "name": "bind",
          "overrides": {
            "fqn": "@aws-cdk/aws-codepipeline-api.Action"
          },
          "parameters": [
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline-api.IStage"
              }
            },
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "PipelineDeployAction"
    },
    "@aws-cdk/aws-s3.PipelineDeployActionProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Construction properties of the {@link PipelineDeployAction S3 deploy Action}."
      },
      "fqn": "@aws-cdk/aws-s3.PipelineDeployActionProps",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-s3.CommonPipelineDeployActionProps"
        }
      ],
      "kind": "interface",
      "name": "PipelineDeployActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The Amazon S3 bucket that is the deploy target."
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.PipelineSourceAction": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/aws-codepipeline-api.SourceAction"
      },
      "docs": {
        "comment": "Source that is provided by a specific Amazon S3 object."
      },
      "fqn": "@aws-cdk/aws-s3.PipelineSourceAction",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.PipelineSourceActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "The method called when an Action is attached to a Pipeline.\nThis method is guaranteed to be called only once for each Action instance."
          },
          "name": "bind",
          "overrides": {
            "fqn": "@aws-cdk/aws-codepipeline-api.Action"
          },
          "parameters": [
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline-api.IStage"
              }
            },
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "PipelineSourceAction"
    },
    "@aws-cdk/aws-s3.PipelineSourceActionProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Construction properties of the {@link PipelineSourceAction S3 source Action}."
      },
      "fqn": "@aws-cdk/aws-s3.PipelineSourceActionProps",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-s3.CommonPipelineSourceActionProps"
        }
      ],
      "kind": "interface",
      "name": "PipelineSourceActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The Amazon S3 bucket that stores the source code"
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.StorageClass": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "Storage class to move an object to"
      },
      "fqn": "@aws-cdk/aws-s3.StorageClass",
      "kind": "enum",
      "members": [
        {
          "docs": {
            "comment": "Storage class for data that is accessed less frequently, but requires rapid access when needed.\n\nHas lower availability than Standard storage."
          },
          "name": "InfrequentAccess"
        },
        {
          "docs": {
            "comment": "Infrequent Access that's only stored in one availability zone.\n\nHas lower availability than standard InfrequentAccess."
          },
          "name": "OneZoneInfrequentAccess"
        },
        {
          "docs": {
            "comment": "Storage class for long-term archival that can take between minutes and hours to access."
          },
          "name": "Glacier"
        }
      ],
      "name": "StorageClass"
    },
    "@aws-cdk/aws-s3.Transition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when an object transitions to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.Transition",
      "kind": "interface",
      "name": "Transition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates when objects are transitioned to the specified storage class.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.",
            "default": "No transition date."
          },
          "name": "transitionDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    }
  },
  "version": "0.25.2",
  "fingerprint": "Ibf+85Nxot4ljk/cZuv1m9JXgXJs9TPpnTZDllIwF84="
}
