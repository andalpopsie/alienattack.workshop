import cdk = require('@aws-cdk/cdk');
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
 */
export interface CfnQueueProps {
    /**
     * ``AWS::SQS::Queue.ContentBasedDeduplication``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-contentbaseddeduplication
     */
    contentBasedDeduplication?: boolean | cdk.Token;
    /**
     * ``AWS::SQS::Queue.DelaySeconds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-delayseconds
     */
    delaySeconds?: number | cdk.Token;
    /**
     * ``AWS::SQS::Queue.FifoQueue``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-fifoqueue
     */
    fifoQueue?: boolean | cdk.Token;
    /**
     * ``AWS::SQS::Queue.KmsDataKeyReusePeriodSeconds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-kmsdatakeyreuseperiodseconds
     */
    kmsDataKeyReusePeriodSeconds?: number | cdk.Token;
    /**
     * ``AWS::SQS::Queue.KmsMasterKeyId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-kmsmasterkeyid
     */
    kmsMasterKeyId?: string;
    /**
     * ``AWS::SQS::Queue.MaximumMessageSize``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-maxmesgsize
     */
    maximumMessageSize?: number | cdk.Token;
    /**
     * ``AWS::SQS::Queue.MessageRetentionPeriod``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-msgretentionperiod
     */
    messageRetentionPeriod?: number | cdk.Token;
    /**
     * ``AWS::SQS::Queue.QueueName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-name
     */
    queueName?: string;
    /**
     * ``AWS::SQS::Queue.ReceiveMessageWaitTimeSeconds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-receivemsgwaittime
     */
    receiveMessageWaitTimeSeconds?: number | cdk.Token;
    /**
     * ``AWS::SQS::Queue.RedrivePolicy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-redrive
     */
    redrivePolicy?: object | cdk.Token;
    /**
     * ``AWS::SQS::Queue.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#cfn-sqs-queue-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::SQS::Queue.VisibilityTimeout``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html#aws-sqs-queue-visiblitytimeout
     */
    visibilityTimeout?: number | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
 */
export declare class CfnQueue extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::SQS::Queue";
    /**
     * @cloudformation_attribute Arn
     */
    readonly queueArn: string;
    /**
     * @cloudformation_attribute QueueName
     */
    readonly queueName: string;
    readonly queueUrl: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::SQS::Queue``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnQueueProps);
    readonly propertyOverrides: CfnQueueProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
 */
export interface CfnQueuePolicyProps {
    /**
     * ``AWS::SQS::QueuePolicy.PolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html#cfn-sqs-queuepolicy-policydoc
     */
    policyDocument: object | cdk.Token;
    /**
     * ``AWS::SQS::QueuePolicy.Queues``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html#cfn-sqs-queuepolicy-queues
     */
    queues: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
 */
export declare class CfnQueuePolicy extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::SQS::QueuePolicy";
    /**
     * Creates a new ``AWS::SQS::QueuePolicy``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnQueuePolicyProps);
    readonly propertyOverrides: CfnQueuePolicyProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
