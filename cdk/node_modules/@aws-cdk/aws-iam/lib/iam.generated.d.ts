import cdk = require('@aws-cdk/cdk');
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html
 */
export interface CfnAccessKeyProps {
    /**
     * ``AWS::IAM::AccessKey.UserName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-username
     */
    userName: string;
    /**
     * ``AWS::IAM::AccessKey.Serial``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-serial
     */
    serial?: number | cdk.Token;
    /**
     * ``AWS::IAM::AccessKey.Status``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-status
     */
    status?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html
 */
export declare class CfnAccessKey extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::AccessKey";
    /**
     * @cloudformation_attribute SecretAccessKey
     */
    readonly accessKeySecretAccessKey: string;
    readonly accessKeyId: string;
    /**
     * Creates a new ``AWS::IAM::AccessKey``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnAccessKeyProps);
    readonly propertyOverrides: CfnAccessKeyProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html
 */
export interface CfnGroupProps {
    /**
     * ``AWS::IAM::Group.GroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-groupname
     */
    groupName?: string;
    /**
     * ``AWS::IAM::Group.ManagedPolicyArns``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-managepolicyarns
     */
    managedPolicyArns?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::Group.Path``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-path
     */
    path?: string;
    /**
     * ``AWS::IAM::Group.Policies``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html#cfn-iam-group-policies
     */
    policies?: Array<CfnGroup.PolicyProperty | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html
 */
export declare class CfnGroup extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::Group";
    /**
     * @cloudformation_attribute Arn
     */
    readonly groupArn: string;
    readonly groupName: string;
    /**
     * Creates a new ``AWS::IAM::Group``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnGroupProps);
    readonly propertyOverrides: CfnGroupProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnGroup {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
     */
    interface PolicyProperty {
        /**
         * ``CfnGroup.PolicyProperty.PolicyDocument``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
         */
        policyDocument: object | cdk.Token;
        /**
         * ``CfnGroup.PolicyProperty.PolicyName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
         */
        policyName: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html
 */
export interface CfnInstanceProfileProps {
    /**
     * ``AWS::IAM::InstanceProfile.Roles``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-roles
     */
    roles: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::InstanceProfile.InstanceProfileName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-instanceprofilename
     */
    instanceProfileName?: string;
    /**
     * ``AWS::IAM::InstanceProfile.Path``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-path
     */
    path?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html
 */
export declare class CfnInstanceProfile extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::InstanceProfile";
    /**
     * @cloudformation_attribute Arn
     */
    readonly instanceProfileArn: string;
    readonly instanceProfileName: string;
    /**
     * Creates a new ``AWS::IAM::InstanceProfile``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnInstanceProfileProps);
    readonly propertyOverrides: CfnInstanceProfileProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html
 */
export interface CfnManagedPolicyProps {
    /**
     * ``AWS::IAM::ManagedPolicy.PolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-policydocument
     */
    policyDocument: object | cdk.Token;
    /**
     * ``AWS::IAM::ManagedPolicy.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-description
     */
    description?: string;
    /**
     * ``AWS::IAM::ManagedPolicy.Groups``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-groups
     */
    groups?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::ManagedPolicy.ManagedPolicyName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-managedpolicyname
     */
    managedPolicyName?: string;
    /**
     * ``AWS::IAM::ManagedPolicy.Path``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-ec2-dhcpoptions-path
     */
    path?: string;
    /**
     * ``AWS::IAM::ManagedPolicy.Roles``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-roles
     */
    roles?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::ManagedPolicy.Users``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-users
     */
    users?: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html
 */
export declare class CfnManagedPolicy extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::ManagedPolicy";
    readonly managedPolicyArn: string;
    /**
     * Creates a new ``AWS::IAM::ManagedPolicy``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnManagedPolicyProps);
    readonly propertyOverrides: CfnManagedPolicyProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html
 */
export interface CfnPolicyProps {
    /**
     * ``AWS::IAM::Policy.PolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policydocument
     */
    policyDocument: object | cdk.Token;
    /**
     * ``AWS::IAM::Policy.PolicyName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policyname
     */
    policyName: string;
    /**
     * ``AWS::IAM::Policy.Groups``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-groups
     */
    groups?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::Policy.Roles``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-roles
     */
    roles?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::Policy.Users``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-users
     */
    users?: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html
 */
export declare class CfnPolicy extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::Policy";
    readonly policyName: string;
    /**
     * Creates a new ``AWS::IAM::Policy``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnPolicyProps);
    readonly propertyOverrides: CfnPolicyProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
 */
export interface CfnRoleProps {
    /**
     * ``AWS::IAM::Role.AssumeRolePolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
     */
    assumeRolePolicyDocument: object | cdk.Token;
    /**
     * ``AWS::IAM::Role.ManagedPolicyArns``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managepolicyarns
     */
    managedPolicyArns?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::Role.MaxSessionDuration``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
     */
    maxSessionDuration?: number | cdk.Token;
    /**
     * ``AWS::IAM::Role.Path``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
     */
    path?: string;
    /**
     * ``AWS::IAM::Role.PermissionsBoundary``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
     */
    permissionsBoundary?: string;
    /**
     * ``AWS::IAM::Role.Policies``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
     */
    policies?: Array<CfnRole.PolicyProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::Role.RoleName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
     */
    roleName?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
 */
export declare class CfnRole extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::Role";
    /**
     * @cloudformation_attribute Arn
     */
    readonly roleArn: string;
    /**
     * @cloudformation_attribute RoleId
     */
    readonly roleId: string;
    readonly roleName: string;
    /**
     * Creates a new ``AWS::IAM::Role``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnRoleProps);
    readonly propertyOverrides: CfnRoleProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnRole {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
     */
    interface PolicyProperty {
        /**
         * ``CfnRole.PolicyProperty.PolicyDocument``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
         */
        policyDocument: object | cdk.Token;
        /**
         * ``CfnRole.PolicyProperty.PolicyName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
         */
        policyName: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html
 */
export interface CfnServiceLinkedRoleProps {
    /**
     * ``AWS::IAM::ServiceLinkedRole.AWSServiceName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-awsservicename
     */
    awsServiceName: string;
    /**
     * ``AWS::IAM::ServiceLinkedRole.CustomSuffix``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-customsuffix
     */
    customSuffix?: string;
    /**
     * ``AWS::IAM::ServiceLinkedRole.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-description
     */
    description?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html
 */
export declare class CfnServiceLinkedRole extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::ServiceLinkedRole";
    /**
     * Creates a new ``AWS::IAM::ServiceLinkedRole``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnServiceLinkedRoleProps);
    readonly propertyOverrides: CfnServiceLinkedRoleProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html
 */
export interface CfnUserProps {
    /**
     * ``AWS::IAM::User.Groups``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-groups
     */
    groups?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::User.LoginProfile``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-loginprofile
     */
    loginProfile?: CfnUser.LoginProfileProperty | cdk.Token;
    /**
     * ``AWS::IAM::User.ManagedPolicyArns``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-managepolicyarns
     */
    managedPolicyArns?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::User.Path``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-path
     */
    path?: string;
    /**
     * ``AWS::IAM::User.PermissionsBoundary``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-permissionsboundary
     */
    permissionsBoundary?: string;
    /**
     * ``AWS::IAM::User.Policies``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-policies
     */
    policies?: Array<CfnUser.PolicyProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::IAM::User.UserName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html#cfn-iam-user-username
     */
    userName?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html
 */
export declare class CfnUser extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::User";
    /**
     * @cloudformation_attribute Arn
     */
    readonly userArn: string;
    readonly userName: string;
    /**
     * Creates a new ``AWS::IAM::User``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnUserProps);
    readonly propertyOverrides: CfnUserProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnUser {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html
     */
    interface LoginProfileProperty {
        /**
         * ``CfnUser.LoginProfileProperty.Password``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
         */
        password: string;
        /**
         * ``CfnUser.LoginProfileProperty.PasswordResetRequired``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
         */
        passwordResetRequired?: boolean | cdk.Token;
    }
}
export declare namespace CfnUser {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
     */
    interface PolicyProperty {
        /**
         * ``CfnUser.PolicyProperty.PolicyDocument``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
         */
        policyDocument: object | cdk.Token;
        /**
         * ``CfnUser.PolicyProperty.PolicyName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
         */
        policyName: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html
 */
export interface CfnUserToGroupAdditionProps {
    /**
     * ``AWS::IAM::UserToGroupAddition.GroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-groupname
     */
    groupName: string;
    /**
     * ``AWS::IAM::UserToGroupAddition.Users``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-users
     */
    users: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html
 */
export declare class CfnUserToGroupAddition extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::IAM::UserToGroupAddition";
    /**
     * Creates a new ``AWS::IAM::UserToGroupAddition``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnUserToGroupAdditionProps);
    readonly propertyOverrides: CfnUserToGroupAdditionProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
