import cdk = require('@aws-cdk/cdk');
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
 */
export interface CfnSubscriptionProps {
    /**
     * ``AWS::SNS::Subscription.Protocol``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-protocol
     */
    protocol: string;
    /**
     * ``AWS::SNS::Subscription.TopicArn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#topicarn
     */
    topicArn: string;
    /**
     * ``AWS::SNS::Subscription.DeliveryPolicy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-deliverypolicy
     */
    deliveryPolicy?: object | cdk.Token;
    /**
     * ``AWS::SNS::Subscription.Endpoint``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-endpoint
     */
    endpoint?: string;
    /**
     * ``AWS::SNS::Subscription.FilterPolicy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-filterpolicy
     */
    filterPolicy?: object | cdk.Token;
    /**
     * ``AWS::SNS::Subscription.RawMessageDelivery``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-rawmessagedelivery
     */
    rawMessageDelivery?: boolean | cdk.Token;
    /**
     * ``AWS::SNS::Subscription.Region``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-region
     */
    region?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
 */
export declare class CfnSubscription extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::SNS::Subscription";
    readonly subscriptionArn: string;
    /**
     * Creates a new ``AWS::SNS::Subscription``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSubscriptionProps);
    readonly propertyOverrides: CfnSubscriptionProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
 */
export interface CfnTopicProps {
    /**
     * ``AWS::SNS::Topic.DisplayName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-displayname
     */
    displayName?: string;
    /**
     * ``AWS::SNS::Topic.KmsMasterKeyId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-kmsmasterkeyid
     */
    kmsMasterKeyId?: string;
    /**
     * ``AWS::SNS::Topic.Subscription``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-subscription
     */
    subscription?: Array<CfnTopic.SubscriptionProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::SNS::Topic.TopicName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-topicname
     */
    topicName?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
 */
export declare class CfnTopic extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::SNS::Topic";
    /**
     * @cloudformation_attribute TopicName
     */
    readonly topicName: string;
    readonly topicArn: string;
    /**
     * Creates a new ``AWS::SNS::Topic``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnTopicProps);
    readonly propertyOverrides: CfnTopicProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnTopic {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html
     */
    interface SubscriptionProperty {
        /**
         * ``CfnTopic.SubscriptionProperty.Endpoint``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-endpoint
         */
        endpoint: string;
        /**
         * ``CfnTopic.SubscriptionProperty.Protocol``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-protocol
         */
        protocol: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html
 */
export interface CfnTopicPolicyProps {
    /**
     * ``AWS::SNS::TopicPolicy.PolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-policydocument
     */
    policyDocument: object | cdk.Token;
    /**
     * ``AWS::SNS::TopicPolicy.Topics``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-topics
     */
    topics: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html
 */
export declare class CfnTopicPolicy extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::SNS::TopicPolicy";
    /**
     * Creates a new ``AWS::SNS::TopicPolicy``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTopicPolicyProps);
    readonly propertyOverrides: CfnTopicPolicyProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
