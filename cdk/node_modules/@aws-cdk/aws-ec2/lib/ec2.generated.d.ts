import cdk = require('@aws-cdk/cdk');
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html
 */
export interface CfnCustomerGatewayProps {
    /**
     * ``AWS::EC2::CustomerGateway.BgpAsn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn
     */
    bgpAsn: number | cdk.Token;
    /**
     * ``AWS::EC2::CustomerGateway.IpAddress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress
     */
    ipAddress: string;
    /**
     * ``AWS::EC2::CustomerGateway.Type``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type
     */
    type: string;
    /**
     * ``AWS::EC2::CustomerGateway.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html
 */
export declare class CfnCustomerGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::CustomerGateway";
    readonly customerGatewayName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::CustomerGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnCustomerGatewayProps);
    readonly propertyOverrides: CfnCustomerGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html
 */
export interface CfnDHCPOptionsProps {
    /**
     * ``AWS::EC2::DHCPOptions.DomainName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainname
     */
    domainName?: string;
    /**
     * ``AWS::EC2::DHCPOptions.DomainNameServers``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainnameservers
     */
    domainNameServers?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::DHCPOptions.NetbiosNameServers``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnameservers
     */
    netbiosNameServers?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::DHCPOptions.NetbiosNodeType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnodetype
     */
    netbiosNodeType?: number | cdk.Token;
    /**
     * ``AWS::EC2::DHCPOptions.NtpServers``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-ntpservers
     */
    ntpServers?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::DHCPOptions.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html
 */
export declare class CfnDHCPOptions extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::DHCPOptions";
    readonly dhcpOptionsName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::DHCPOptions``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnDHCPOptionsProps);
    readonly propertyOverrides: CfnDHCPOptionsProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html
 */
export interface CfnEC2FleetProps {
    /**
     * ``AWS::EC2::EC2Fleet.LaunchTemplateConfigs``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs
     */
    launchTemplateConfigs: Array<CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.TargetCapacitySpecification``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification
     */
    targetCapacitySpecification: CfnEC2Fleet.TargetCapacitySpecificationRequestProperty | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.ExcessCapacityTerminationPolicy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy
     */
    excessCapacityTerminationPolicy?: string;
    /**
     * ``AWS::EC2::EC2Fleet.OnDemandOptions``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions
     */
    onDemandOptions?: CfnEC2Fleet.OnDemandOptionsRequestProperty | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.ReplaceUnhealthyInstances``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances
     */
    replaceUnhealthyInstances?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.SpotOptions``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions
     */
    spotOptions?: CfnEC2Fleet.SpotOptionsRequestProperty | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.TagSpecifications``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications
     */
    tagSpecifications?: Array<CfnEC2Fleet.TagSpecificationProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.TerminateInstancesWithExpiration``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration
     */
    terminateInstancesWithExpiration?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::EC2Fleet.Type``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type
     */
    type?: string;
    /**
     * ``AWS::EC2::EC2Fleet.ValidFrom``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom
     */
    validFrom?: string;
    /**
     * ``AWS::EC2::EC2Fleet.ValidUntil``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil
     */
    validUntil?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html
 */
export declare class CfnEC2Fleet extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::EC2Fleet";
    readonly ec2FleetId: string;
    /**
     * Creates a new ``AWS::EC2::EC2Fleet``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnEC2FleetProps);
    readonly propertyOverrides: CfnEC2FleetProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html
     */
    interface FleetLaunchTemplateConfigRequestProperty {
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.LaunchTemplateSpecification``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-launchtemplatespecification
         */
        launchTemplateSpecification?: CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty | cdk.Token;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateConfigRequestProperty.Overrides``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateconfigrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateconfigrequest-overrides
         */
        overrides?: Array<CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html
     */
    interface FleetLaunchTemplateOverridesRequestProperty {
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.AvailabilityZone``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-availabilityzone
         */
        availabilityZone?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.InstanceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-instancetype
         */
        instanceType?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.MaxPrice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-maxprice
         */
        maxPrice?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.Priority``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-priority
         */
        priority?: number | cdk.Token;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-subnetid
         */
        subnetId?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateOverridesRequestProperty.WeightedCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplateoverridesrequest-weightedcapacity
         */
        weightedCapacity?: number | cdk.Token;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html
     */
    interface FleetLaunchTemplateSpecificationRequestProperty {
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplateid
         */
        launchTemplateId?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.LaunchTemplateName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-launchtemplatename
         */
        launchTemplateName?: string;
        /**
         * ``CfnEC2Fleet.FleetLaunchTemplateSpecificationRequestProperty.Version``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest.html#cfn-ec2-ec2fleet-fleetlaunchtemplatespecificationrequest-version
         */
        version?: string;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html
     */
    interface OnDemandOptionsRequestProperty {
        /**
         * ``CfnEC2Fleet.OnDemandOptionsRequestProperty.AllocationStrategy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-ondemandoptionsrequest.html#cfn-ec2-ec2fleet-ondemandoptionsrequest-allocationstrategy
         */
        allocationStrategy?: string;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html
     */
    interface SpotOptionsRequestProperty {
        /**
         * ``CfnEC2Fleet.SpotOptionsRequestProperty.AllocationStrategy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy
         */
        allocationStrategy?: string;
        /**
         * ``CfnEC2Fleet.SpotOptionsRequestProperty.InstanceInterruptionBehavior``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior
         */
        instanceInterruptionBehavior?: string;
        /**
         * ``CfnEC2Fleet.SpotOptionsRequestProperty.InstancePoolsToUseCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount
         */
        instancePoolsToUseCount?: number | cdk.Token;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html
     */
    interface TagRequestProperty {
        /**
         * ``CfnEC2Fleet.TagRequestProperty.Key``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-key
         */
        key?: string;
        /**
         * ``CfnEC2Fleet.TagRequestProperty.Value``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagrequest.html#cfn-ec2-ec2fleet-tagrequest-value
         */
        value?: string;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html
     */
    interface TagSpecificationProperty {
        /**
         * ``CfnEC2Fleet.TagSpecificationProperty.ResourceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-resourcetype
         */
        resourceType?: string;
        /**
         * ``CfnEC2Fleet.TagSpecificationProperty.Tags``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-tagspecification.html#cfn-ec2-ec2fleet-tagspecification-tags
         */
        tags?: Array<CfnEC2Fleet.TagRequestProperty | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnEC2Fleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html
     */
    interface TargetCapacitySpecificationRequestProperty {
        /**
         * ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.DefaultTargetCapacityType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-defaulttargetcapacitytype
         */
        defaultTargetCapacityType?: string;
        /**
         * ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.OnDemandTargetCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-ondemandtargetcapacity
         */
        onDemandTargetCapacity?: number | cdk.Token;
        /**
         * ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.SpotTargetCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-spottargetcapacity
         */
        spotTargetCapacity?: number | cdk.Token;
        /**
         * ``CfnEC2Fleet.TargetCapacitySpecificationRequestProperty.TotalTargetCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-targetcapacityspecificationrequest.html#cfn-ec2-ec2fleet-targetcapacityspecificationrequest-totaltargetcapacity
         */
        totalTargetCapacity: number | cdk.Token;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html
 */
export interface CfnEIPProps {
    /**
     * ``AWS::EC2::EIP.Domain``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain
     */
    domain?: string;
    /**
     * ``AWS::EC2::EIP.InstanceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid
     */
    instanceId?: string;
    /**
     * ``AWS::EC2::EIP.PublicIpv4Pool``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-publicipv4pool
     */
    publicIpv4Pool?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html
 */
export declare class CfnEIP extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::EIP";
    /**
     * @cloudformation_attribute AllocationId
     */
    readonly eipAllocationId: string;
    readonly eipIp: string;
    /**
     * Creates a new ``AWS::EC2::EIP``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnEIPProps);
    readonly propertyOverrides: CfnEIPProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html
 */
export interface CfnEIPAssociationProps {
    /**
     * ``AWS::EC2::EIPAssociation.AllocationId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid
     */
    allocationId?: string;
    /**
     * ``AWS::EC2::EIPAssociation.EIP``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip
     */
    eip?: string;
    /**
     * ``AWS::EC2::EIPAssociation.InstanceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid
     */
    instanceId?: string;
    /**
     * ``AWS::EC2::EIPAssociation.NetworkInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid
     */
    networkInterfaceId?: string;
    /**
     * ``AWS::EC2::EIPAssociation.PrivateIpAddress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress
     */
    privateIpAddress?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html
 */
export declare class CfnEIPAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::EIPAssociation";
    readonly eipAssociationName: string;
    /**
     * Creates a new ``AWS::EC2::EIPAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnEIPAssociationProps);
    readonly propertyOverrides: CfnEIPAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html
 */
export interface CfnEgressOnlyInternetGatewayProps {
    /**
     * ``AWS::EC2::EgressOnlyInternetGateway.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid
     */
    vpcId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html
 */
export declare class CfnEgressOnlyInternetGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::EgressOnlyInternetGateway";
    readonly egressOnlyInternetGatewayId: string;
    /**
     * Creates a new ``AWS::EC2::EgressOnlyInternetGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnEgressOnlyInternetGatewayProps);
    readonly propertyOverrides: CfnEgressOnlyInternetGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
 */
export interface CfnFlowLogProps {
    /**
     * ``AWS::EC2::FlowLog.ResourceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid
     */
    resourceId: string;
    /**
     * ``AWS::EC2::FlowLog.ResourceType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype
     */
    resourceType: string;
    /**
     * ``AWS::EC2::FlowLog.TrafficType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype
     */
    trafficType: string;
    /**
     * ``AWS::EC2::FlowLog.DeliverLogsPermissionArn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn
     */
    deliverLogsPermissionArn?: string;
    /**
     * ``AWS::EC2::FlowLog.LogDestination``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination
     */
    logDestination?: string;
    /**
     * ``AWS::EC2::FlowLog.LogDestinationType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype
     */
    logDestinationType?: string;
    /**
     * ``AWS::EC2::FlowLog.LogGroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname
     */
    logGroupName?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
 */
export declare class CfnFlowLog extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::FlowLog";
    readonly flowLogId: string;
    /**
     * Creates a new ``AWS::EC2::FlowLog``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnFlowLogProps);
    readonly propertyOverrides: CfnFlowLogProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html
 */
export interface CfnHostProps {
    /**
     * ``AWS::EC2::Host.AvailabilityZone``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone
     */
    availabilityZone: string;
    /**
     * ``AWS::EC2::Host.InstanceType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype
     */
    instanceType: string;
    /**
     * ``AWS::EC2::Host.AutoPlacement``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement
     */
    autoPlacement?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html
 */
export declare class CfnHost extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::Host";
    readonly hostId: string;
    /**
     * Creates a new ``AWS::EC2::Host``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnHostProps);
    readonly propertyOverrides: CfnHostProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
 */
export interface CfnInstanceProps {
    /**
     * ``AWS::EC2::Instance.AdditionalInfo``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo
     */
    additionalInfo?: string;
    /**
     * ``AWS::EC2::Instance.Affinity``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity
     */
    affinity?: string;
    /**
     * ``AWS::EC2::Instance.AvailabilityZone``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone
     */
    availabilityZone?: string;
    /**
     * ``AWS::EC2::Instance.BlockDeviceMappings``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings
     */
    blockDeviceMappings?: Array<CfnInstance.BlockDeviceMappingProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.CreditSpecification``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification
     */
    creditSpecification?: CfnInstance.CreditSpecificationProperty | cdk.Token;
    /**
     * ``AWS::EC2::Instance.DisableApiTermination``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination
     */
    disableApiTermination?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Instance.EbsOptimized``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized
     */
    ebsOptimized?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Instance.ElasticGpuSpecifications``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications
     */
    elasticGpuSpecifications?: Array<CfnInstance.ElasticGpuSpecificationProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.ElasticInferenceAccelerators``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators
     */
    elasticInferenceAccelerators?: Array<CfnInstance.ElasticInferenceAcceleratorProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.HostId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid
     */
    hostId?: string;
    /**
     * ``AWS::EC2::Instance.IamInstanceProfile``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile
     */
    iamInstanceProfile?: string;
    /**
     * ``AWS::EC2::Instance.ImageId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid
     */
    imageId?: string;
    /**
     * ``AWS::EC2::Instance.InstanceInitiatedShutdownBehavior``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior
     */
    instanceInitiatedShutdownBehavior?: string;
    /**
     * ``AWS::EC2::Instance.InstanceType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype
     */
    instanceType?: string;
    /**
     * ``AWS::EC2::Instance.Ipv6AddressCount``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount
     */
    ipv6AddressCount?: number | cdk.Token;
    /**
     * ``AWS::EC2::Instance.Ipv6Addresses``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses
     */
    ipv6Addresses?: Array<CfnInstance.InstanceIpv6AddressProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.KernelId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid
     */
    kernelId?: string;
    /**
     * ``AWS::EC2::Instance.KeyName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname
     */
    keyName?: string;
    /**
     * ``AWS::EC2::Instance.LaunchTemplate``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate
     */
    launchTemplate?: CfnInstance.LaunchTemplateSpecificationProperty | cdk.Token;
    /**
     * ``AWS::EC2::Instance.LicenseSpecifications``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-licensespecifications
     */
    licenseSpecifications?: Array<CfnInstance.LicenseSpecificationProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.Monitoring``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring
     */
    monitoring?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Instance.NetworkInterfaces``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces
     */
    networkInterfaces?: Array<CfnInstance.NetworkInterfaceProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.PlacementGroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname
     */
    placementGroupName?: string;
    /**
     * ``AWS::EC2::Instance.PrivateIpAddress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress
     */
    privateIpAddress?: string;
    /**
     * ``AWS::EC2::Instance.RamdiskId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid
     */
    ramdiskId?: string;
    /**
     * ``AWS::EC2::Instance.SecurityGroupIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids
     */
    securityGroupIds?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.SecurityGroups``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups
     */
    securityGroups?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.SourceDestCheck``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck
     */
    sourceDestCheck?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Instance.SsmAssociations``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations
     */
    ssmAssociations?: Array<CfnInstance.SsmAssociationProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid
     */
    subnetId?: string;
    /**
     * ``AWS::EC2::Instance.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Instance.Tenancy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy
     */
    tenancy?: string;
    /**
     * ``AWS::EC2::Instance.UserData``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata
     */
    userData?: string;
    /**
     * ``AWS::EC2::Instance.Volumes``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes
     */
    volumes?: Array<CfnInstance.VolumeProperty | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
 */
export declare class CfnInstance extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::Instance";
    /**
     * @cloudformation_attribute AvailabilityZone
     */
    readonly instanceAvailabilityZone: string;
    /**
     * @cloudformation_attribute PrivateDnsName
     */
    readonly instancePrivateDnsName: string;
    /**
     * @cloudformation_attribute PrivateIp
     */
    readonly instancePrivateIp: string;
    /**
     * @cloudformation_attribute PublicDnsName
     */
    readonly instancePublicDnsName: string;
    /**
     * @cloudformation_attribute PublicIp
     */
    readonly instancePublicIp: string;
    readonly instanceId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::Instance``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnInstanceProps);
    readonly propertyOverrides: CfnInstanceProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html
     */
    interface AssociationParameterProperty {
        /**
         * ``CfnInstance.AssociationParameterProperty.Key``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key
         */
        key: string;
        /**
         * ``CfnInstance.AssociationParameterProperty.Value``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value
         */
        value: Array<string | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html
     */
    interface BlockDeviceMappingProperty {
        /**
         * ``CfnInstance.BlockDeviceMappingProperty.DeviceName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename
         */
        deviceName: string;
        /**
         * ``CfnInstance.BlockDeviceMappingProperty.Ebs``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs
         */
        ebs?: CfnInstance.EbsProperty | cdk.Token;
        /**
         * ``CfnInstance.BlockDeviceMappingProperty.NoDevice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice
         */
        noDevice?: CfnInstance.NoDeviceProperty | cdk.Token;
        /**
         * ``CfnInstance.BlockDeviceMappingProperty.VirtualName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname
         */
        virtualName?: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html
     */
    interface CreditSpecificationProperty {
        /**
         * ``CfnInstance.CreditSpecificationProperty.CPUCredits``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits
         */
        cpuCredits?: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html
     */
    interface EbsProperty {
        /**
         * ``CfnInstance.EbsProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnInstance.EbsProperty.Encrypted``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted
         */
        encrypted?: boolean | cdk.Token;
        /**
         * ``CfnInstance.EbsProperty.Iops``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops
         */
        iops?: number | cdk.Token;
        /**
         * ``CfnInstance.EbsProperty.SnapshotId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid
         */
        snapshotId?: string;
        /**
         * ``CfnInstance.EbsProperty.VolumeSize``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize
         */
        volumeSize?: number | cdk.Token;
        /**
         * ``CfnInstance.EbsProperty.VolumeType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype
         */
        volumeType?: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html
     */
    interface ElasticGpuSpecificationProperty {
        /**
         * ``CfnInstance.ElasticGpuSpecificationProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type
         */
        type: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html
     */
    interface ElasticInferenceAcceleratorProperty {
        /**
         * ``CfnInstance.ElasticInferenceAcceleratorProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticinferenceaccelerator.html#cfn-ec2-instance-elasticinferenceaccelerator-type
         */
        type: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html
     */
    interface InstanceIpv6AddressProperty {
        /**
         * ``CfnInstance.InstanceIpv6AddressProperty.Ipv6Address``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address
         */
        ipv6Address: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html
     */
    interface LaunchTemplateSpecificationProperty {
        /**
         * ``CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid
         */
        launchTemplateId?: string;
        /**
         * ``CfnInstance.LaunchTemplateSpecificationProperty.LaunchTemplateName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename
         */
        launchTemplateName?: string;
        /**
         * ``CfnInstance.LaunchTemplateSpecificationProperty.Version``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version
         */
        version: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html
     */
    interface LicenseSpecificationProperty {
        /**
         * ``CfnInstance.LicenseSpecificationProperty.LicenseConfigurationArn``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-licensespecification.html#cfn-ec2-instance-licensespecification-licenseconfigurationarn
         */
        licenseConfigurationArn: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html
     */
    interface NetworkInterfaceProperty {
        /**
         * ``CfnInstance.NetworkInterfaceProperty.AssociatePublicIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip
         */
        associatePublicIpAddress?: boolean | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.Description``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description
         */
        description?: string;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.DeviceIndex``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex
         */
        deviceIndex: string;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.GroupSet``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset
         */
        groupSet?: Array<string | cdk.Token> | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.Ipv6AddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount
         */
        ipv6AddressCount?: number | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.Ipv6Addresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses
         */
        ipv6Addresses?: Array<CfnInstance.InstanceIpv6AddressProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.NetworkInterfaceId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface
         */
        networkInterfaceId?: string;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress
         */
        privateIpAddress?: string;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.PrivateIpAddresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses
         */
        privateIpAddresses?: Array<CfnInstance.PrivateIpAddressSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip
         */
        secondaryPrivateIpAddressCount?: number | cdk.Token;
        /**
         * ``CfnInstance.NetworkInterfaceProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid
         */
        subnetId?: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html
     */
    interface NoDeviceProperty {
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html
     */
    interface PrivateIpAddressSpecificationProperty {
        /**
         * ``CfnInstance.PrivateIpAddressSpecificationProperty.Primary``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary
         */
        primary: boolean | cdk.Token;
        /**
         * ``CfnInstance.PrivateIpAddressSpecificationProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress
         */
        privateIpAddress: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html
     */
    interface SsmAssociationProperty {
        /**
         * ``CfnInstance.SsmAssociationProperty.AssociationParameters``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters
         */
        associationParameters?: Array<CfnInstance.AssociationParameterProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnInstance.SsmAssociationProperty.DocumentName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname
         */
        documentName: string;
    }
}
export declare namespace CfnInstance {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html
     */
    interface VolumeProperty {
        /**
         * ``CfnInstance.VolumeProperty.Device``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device
         */
        device: string;
        /**
         * ``CfnInstance.VolumeProperty.VolumeId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid
         */
        volumeId: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
 */
export interface CfnInternetGatewayProps {
    /**
     * ``AWS::EC2::InternetGateway.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
 */
export declare class CfnInternetGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::InternetGateway";
    readonly internetGatewayName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::InternetGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnInternetGatewayProps);
    readonly propertyOverrides: CfnInternetGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html
 */
export interface CfnLaunchTemplateProps {
    /**
     * ``AWS::EC2::LaunchTemplate.LaunchTemplateData``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata
     */
    launchTemplateData?: CfnLaunchTemplate.LaunchTemplateDataProperty | cdk.Token;
    /**
     * ``AWS::EC2::LaunchTemplate.LaunchTemplateName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename
     */
    launchTemplateName?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html
 */
export declare class CfnLaunchTemplate extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::LaunchTemplate";
    /**
     * @cloudformation_attribute DefaultVersionNumber
     */
    readonly launchTemplateDefaultVersionNumber: string;
    /**
     * @cloudformation_attribute LatestVersionNumber
     */
    readonly launchTemplateLatestVersionNumber: string;
    readonly launchTemplateId: string;
    /**
     * Creates a new ``AWS::EC2::LaunchTemplate``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnLaunchTemplateProps);
    readonly propertyOverrides: CfnLaunchTemplateProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html
     */
    interface BlockDeviceMappingProperty {
        /**
         * ``CfnLaunchTemplate.BlockDeviceMappingProperty.DeviceName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename
         */
        deviceName?: string;
        /**
         * ``CfnLaunchTemplate.BlockDeviceMappingProperty.Ebs``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs
         */
        ebs?: CfnLaunchTemplate.EbsProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.BlockDeviceMappingProperty.NoDevice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice
         */
        noDevice?: string;
        /**
         * ``CfnLaunchTemplate.BlockDeviceMappingProperty.VirtualName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname
         */
        virtualName?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html
     */
    interface CapacityReservationSpecificationProperty {
        /**
         * ``CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationPreference``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationpreference
         */
        capacityReservationPreference?: string;
        /**
         * ``CfnLaunchTemplate.CapacityReservationSpecificationProperty.CapacityReservationTarget``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification-capacityreservationtarget
         */
        capacityReservationTarget?: CfnLaunchTemplate.CapacityReservationTargetProperty | cdk.Token;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html
     */
    interface CapacityReservationTargetProperty {
        /**
         * ``CfnLaunchTemplate.CapacityReservationTargetProperty.CapacityReservationId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-capacityreservationtarget.html#cfn-ec2-launchtemplate-capacityreservationtarget-capacityreservationid
         */
        capacityReservationId?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html
     */
    interface CpuOptionsProperty {
        /**
         * ``CfnLaunchTemplate.CpuOptionsProperty.CoreCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-corecount
         */
        coreCount?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.CpuOptionsProperty.ThreadsPerCore``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-cpuoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions-threadspercore
         */
        threadsPerCore?: number | cdk.Token;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html
     */
    interface CreditSpecificationProperty {
        /**
         * ``CfnLaunchTemplate.CreditSpecificationProperty.CpuCredits``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits
         */
        cpuCredits?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html
     */
    interface EbsProperty {
        /**
         * ``CfnLaunchTemplate.EbsProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.EbsProperty.Encrypted``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted
         */
        encrypted?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.EbsProperty.Iops``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops
         */
        iops?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.EbsProperty.KmsKeyId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid
         */
        kmsKeyId?: string;
        /**
         * ``CfnLaunchTemplate.EbsProperty.SnapshotId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid
         */
        snapshotId?: string;
        /**
         * ``CfnLaunchTemplate.EbsProperty.VolumeSize``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize
         */
        volumeSize?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.EbsProperty.VolumeType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype
         */
        volumeType?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html
     */
    interface ElasticGpuSpecificationProperty {
        /**
         * ``CfnLaunchTemplate.ElasticGpuSpecificationProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type
         */
        type?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html
     */
    interface HibernationOptionsProperty {
        /**
         * ``CfnLaunchTemplate.HibernationOptionsProperty.Configured``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-hibernationoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions-configured
         */
        configured?: boolean | cdk.Token;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html
     */
    interface IamInstanceProfileProperty {
        /**
         * ``CfnLaunchTemplate.IamInstanceProfileProperty.Arn``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn
         */
        arn?: string;
        /**
         * ``CfnLaunchTemplate.IamInstanceProfileProperty.Name``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name
         */
        name?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html
     */
    interface InstanceMarketOptionsProperty {
        /**
         * ``CfnLaunchTemplate.InstanceMarketOptionsProperty.MarketType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype
         */
        marketType?: string;
        /**
         * ``CfnLaunchTemplate.InstanceMarketOptionsProperty.SpotOptions``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions
         */
        spotOptions?: CfnLaunchTemplate.SpotOptionsProperty | cdk.Token;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html
     */
    interface Ipv6AddProperty {
        /**
         * ``CfnLaunchTemplate.Ipv6AddProperty.Ipv6Address``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address
         */
        ipv6Address?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html
     */
    interface LaunchTemplateDataProperty {
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.BlockDeviceMappings``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings
         */
        blockDeviceMappings?: Array<CfnLaunchTemplate.BlockDeviceMappingProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.CapacityReservationSpecification``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-capacityreservationspecification
         */
        capacityReservationSpecification?: CfnLaunchTemplate.CapacityReservationSpecificationProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.CpuOptions``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-cpuoptions
         */
        cpuOptions?: CfnLaunchTemplate.CpuOptionsProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.CreditSpecification``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification
         */
        creditSpecification?: CfnLaunchTemplate.CreditSpecificationProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.DisableApiTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination
         */
        disableApiTermination?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.EbsOptimized``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized
         */
        ebsOptimized?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticGpuSpecifications``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications
         */
        elasticGpuSpecifications?: Array<CfnLaunchTemplate.ElasticGpuSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.ElasticInferenceAccelerators``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticinferenceaccelerators
         */
        elasticInferenceAccelerators?: Array<CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.HibernationOptions``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-hibernationoptions
         */
        hibernationOptions?: CfnLaunchTemplate.HibernationOptionsProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.IamInstanceProfile``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile
         */
        iamInstanceProfile?: CfnLaunchTemplate.IamInstanceProfileProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.ImageId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid
         */
        imageId?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceInitiatedShutdownBehavior``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior
         */
        instanceInitiatedShutdownBehavior?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceMarketOptions``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions
         */
        instanceMarketOptions?: CfnLaunchTemplate.InstanceMarketOptionsProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.InstanceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype
         */
        instanceType?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.KernelId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid
         */
        kernelId?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.KeyName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname
         */
        keyName?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.LicenseSpecifications``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-licensespecifications
         */
        licenseSpecifications?: Array<CfnLaunchTemplate.LicenseSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.Monitoring``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring
         */
        monitoring?: CfnLaunchTemplate.MonitoringProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.NetworkInterfaces``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces
         */
        networkInterfaces?: Array<CfnLaunchTemplate.NetworkInterfaceProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.Placement``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement
         */
        placement?: CfnLaunchTemplate.PlacementProperty | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.RamDiskId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid
         */
        ramDiskId?: string;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroupIds``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids
         */
        securityGroupIds?: Array<string | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.SecurityGroups``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups
         */
        securityGroups?: Array<string | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.TagSpecifications``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications
         */
        tagSpecifications?: Array<CfnLaunchTemplate.TagSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.LaunchTemplateDataProperty.UserData``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata
         */
        userData?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html
     */
    interface LaunchTemplateElasticInferenceAcceleratorProperty {
        /**
         * ``CfnLaunchTemplate.LaunchTemplateElasticInferenceAcceleratorProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator.html#cfn-ec2-launchtemplate-launchtemplateelasticinferenceaccelerator-type
         */
        type?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html
     */
    interface LicenseSpecificationProperty {
        /**
         * ``CfnLaunchTemplate.LicenseSpecificationProperty.LicenseConfigurationArn``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-licensespecification.html#cfn-ec2-launchtemplate-licensespecification-licenseconfigurationarn
         */
        licenseConfigurationArn?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html
     */
    interface MonitoringProperty {
        /**
         * ``CfnLaunchTemplate.MonitoringProperty.Enabled``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled
         */
        enabled?: boolean | cdk.Token;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html
     */
    interface NetworkInterfaceProperty {
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.AssociatePublicIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress
         */
        associatePublicIpAddress?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.Description``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description
         */
        description?: string;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.DeviceIndex``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex
         */
        deviceIndex?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.Groups``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups
         */
        groups?: Array<string | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6AddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount
         */
        ipv6AddressCount?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.Ipv6Addresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses
         */
        ipv6Addresses?: Array<CfnLaunchTemplate.Ipv6AddProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.NetworkInterfaceId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid
         */
        networkInterfaceId?: string;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress
         */
        privateIpAddress?: string;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.PrivateIpAddresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses
         */
        privateIpAddresses?: Array<CfnLaunchTemplate.PrivateIpAddProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount
         */
        secondaryPrivateIpAddressCount?: number | cdk.Token;
        /**
         * ``CfnLaunchTemplate.NetworkInterfaceProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid
         */
        subnetId?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html
     */
    interface PlacementProperty {
        /**
         * ``CfnLaunchTemplate.PlacementProperty.Affinity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity
         */
        affinity?: string;
        /**
         * ``CfnLaunchTemplate.PlacementProperty.AvailabilityZone``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone
         */
        availabilityZone?: string;
        /**
         * ``CfnLaunchTemplate.PlacementProperty.GroupName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname
         */
        groupName?: string;
        /**
         * ``CfnLaunchTemplate.PlacementProperty.HostId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid
         */
        hostId?: string;
        /**
         * ``CfnLaunchTemplate.PlacementProperty.Tenancy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy
         */
        tenancy?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html
     */
    interface PrivateIpAddProperty {
        /**
         * ``CfnLaunchTemplate.PrivateIpAddProperty.Primary``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary
         */
        primary?: boolean | cdk.Token;
        /**
         * ``CfnLaunchTemplate.PrivateIpAddProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress
         */
        privateIpAddress?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html
     */
    interface SpotOptionsProperty {
        /**
         * ``CfnLaunchTemplate.SpotOptionsProperty.InstanceInterruptionBehavior``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior
         */
        instanceInterruptionBehavior?: string;
        /**
         * ``CfnLaunchTemplate.SpotOptionsProperty.MaxPrice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice
         */
        maxPrice?: string;
        /**
         * ``CfnLaunchTemplate.SpotOptionsProperty.SpotInstanceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype
         */
        spotInstanceType?: string;
    }
}
export declare namespace CfnLaunchTemplate {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html
     */
    interface TagSpecificationProperty {
        /**
         * ``CfnLaunchTemplate.TagSpecificationProperty.ResourceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype
         */
        resourceType?: string;
        /**
         * ``CfnLaunchTemplate.TagSpecificationProperty.Tags``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags
         */
        tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
 */
export interface CfnNatGatewayProps {
    /**
     * ``AWS::EC2::NatGateway.AllocationId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid
     */
    allocationId: string;
    /**
     * ``AWS::EC2::NatGateway.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid
     */
    subnetId: string;
    /**
     * ``AWS::EC2::NatGateway.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
 */
export declare class CfnNatGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NatGateway";
    readonly natGatewayId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::NatGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNatGatewayProps);
    readonly propertyOverrides: CfnNatGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html
 */
export interface CfnNetworkAclProps {
    /**
     * ``AWS::EC2::NetworkAcl.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::NetworkAcl.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html
 */
export declare class CfnNetworkAcl extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NetworkAcl";
    readonly networkAclName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::NetworkAcl``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNetworkAclProps);
    readonly propertyOverrides: CfnNetworkAclProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html
 */
export interface CfnNetworkAclEntryProps {
    /**
     * ``AWS::EC2::NetworkAclEntry.NetworkAclId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-networkaclid
     */
    networkAclId: string;
    /**
     * ``AWS::EC2::NetworkAclEntry.Protocol``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol
     */
    protocol: number | cdk.Token;
    /**
     * ``AWS::EC2::NetworkAclEntry.RuleAction``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ruleaction
     */
    ruleAction: string;
    /**
     * ``AWS::EC2::NetworkAclEntry.RuleNumber``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-rulenumber
     */
    ruleNumber: number | cdk.Token;
    /**
     * ``AWS::EC2::NetworkAclEntry.CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-cidrblock
     */
    cidrBlock?: string;
    /**
     * ``AWS::EC2::NetworkAclEntry.Egress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-egress
     */
    egress?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::NetworkAclEntry.Icmp``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-icmp
     */
    icmp?: CfnNetworkAclEntry.IcmpProperty | cdk.Token;
    /**
     * ``AWS::EC2::NetworkAclEntry.Ipv6CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ipv6cidrblock
     */
    ipv6CidrBlock?: string;
    /**
     * ``AWS::EC2::NetworkAclEntry.PortRange``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-portrange
     */
    portRange?: CfnNetworkAclEntry.PortRangeProperty | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html
 */
export declare class CfnNetworkAclEntry extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NetworkAclEntry";
    readonly networkAclEntryName: string;
    /**
     * Creates a new ``AWS::EC2::NetworkAclEntry``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNetworkAclEntryProps);
    readonly propertyOverrides: CfnNetworkAclEntryProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnNetworkAclEntry {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html
     */
    interface IcmpProperty {
        /**
         * ``CfnNetworkAclEntry.IcmpProperty.Code``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code
         */
        code?: number | cdk.Token;
        /**
         * ``CfnNetworkAclEntry.IcmpProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type
         */
        type?: number | cdk.Token;
    }
}
export declare namespace CfnNetworkAclEntry {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html
     */
    interface PortRangeProperty {
        /**
         * ``CfnNetworkAclEntry.PortRangeProperty.From``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from
         */
        from?: number | cdk.Token;
        /**
         * ``CfnNetworkAclEntry.PortRangeProperty.To``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to
         */
        to?: number | cdk.Token;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html
 */
export interface CfnNetworkInterfaceProps {
    /**
     * ``AWS::EC2::NetworkInterface.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid
     */
    subnetId: string;
    /**
     * ``AWS::EC2::NetworkInterface.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description
     */
    description?: string;
    /**
     * ``AWS::EC2::NetworkInterface.GroupSet``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset
     */
    groupSet?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.InterfaceType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype
     */
    interfaceType?: string;
    /**
     * ``AWS::EC2::NetworkInterface.Ipv6AddressCount``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount
     */
    ipv6AddressCount?: number | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.Ipv6Addresses``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses
     */
    ipv6Addresses?: CfnNetworkInterface.InstanceIpv6AddressProperty | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.PrivateIpAddress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress
     */
    privateIpAddress?: string;
    /**
     * ``AWS::EC2::NetworkInterface.PrivateIpAddresses``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses
     */
    privateIpAddresses?: Array<CfnNetworkInterface.PrivateIpAddressSpecificationProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount
     */
    secondaryPrivateIpAddressCount?: number | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.SourceDestCheck``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck
     */
    sourceDestCheck?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::NetworkInterface.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html
 */
export declare class CfnNetworkInterface extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NetworkInterface";
    /**
     * @cloudformation_attribute PrimaryPrivateIpAddress
     */
    readonly networkInterfacePrimaryPrivateIpAddress: string;
    /**
     * @cloudformation_attribute SecondaryPrivateIpAddresses
     */
    readonly networkInterfaceSecondaryPrivateIpAddresses: string[];
    readonly networkInterfaceName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::NetworkInterface``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNetworkInterfaceProps);
    readonly propertyOverrides: CfnNetworkInterfaceProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnNetworkInterface {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html
     */
    interface InstanceIpv6AddressProperty {
        /**
         * ``CfnNetworkInterface.InstanceIpv6AddressProperty.Ipv6Address``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address
         */
        ipv6Address: string;
    }
}
export declare namespace CfnNetworkInterface {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html
     */
    interface PrivateIpAddressSpecificationProperty {
        /**
         * ``CfnNetworkInterface.PrivateIpAddressSpecificationProperty.Primary``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary
         */
        primary: boolean | cdk.Token;
        /**
         * ``CfnNetworkInterface.PrivateIpAddressSpecificationProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress
         */
        privateIpAddress: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html
 */
export interface CfnNetworkInterfaceAttachmentProps {
    /**
     * ``AWS::EC2::NetworkInterfaceAttachment.DeviceIndex``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex
     */
    deviceIndex: string;
    /**
     * ``AWS::EC2::NetworkInterfaceAttachment.InstanceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid
     */
    instanceId: string;
    /**
     * ``AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid
     */
    networkInterfaceId: string;
    /**
     * ``AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm
     */
    deleteOnTermination?: boolean | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html
 */
export declare class CfnNetworkInterfaceAttachment extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NetworkInterfaceAttachment";
    readonly networkInterfaceAttachmentName: string;
    /**
     * Creates a new ``AWS::EC2::NetworkInterfaceAttachment``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNetworkInterfaceAttachmentProps);
    readonly propertyOverrides: CfnNetworkInterfaceAttachmentProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html
 */
export interface CfnNetworkInterfacePermissionProps {
    /**
     * ``AWS::EC2::NetworkInterfacePermission.AwsAccountId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid
     */
    awsAccountId: string;
    /**
     * ``AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid
     */
    networkInterfaceId: string;
    /**
     * ``AWS::EC2::NetworkInterfacePermission.Permission``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission
     */
    permission: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html
 */
export declare class CfnNetworkInterfacePermission extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::NetworkInterfacePermission";
    readonly networkInterfacePermissionId: string;
    /**
     * Creates a new ``AWS::EC2::NetworkInterfacePermission``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnNetworkInterfacePermissionProps);
    readonly propertyOverrides: CfnNetworkInterfacePermissionProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html
 */
export interface CfnPlacementGroupProps {
    /**
     * ``AWS::EC2::PlacementGroup.Strategy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy
     */
    strategy?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html
 */
export declare class CfnPlacementGroup extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::PlacementGroup";
    readonly placementGroupName: string;
    /**
     * Creates a new ``AWS::EC2::PlacementGroup``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnPlacementGroupProps);
    readonly propertyOverrides: CfnPlacementGroupProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
 */
export interface CfnRouteProps {
    /**
     * ``AWS::EC2::Route.RouteTableId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid
     */
    routeTableId: string;
    /**
     * ``AWS::EC2::Route.DestinationCidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock
     */
    destinationCidrBlock?: string;
    /**
     * ``AWS::EC2::Route.DestinationIpv6CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock
     */
    destinationIpv6CidrBlock?: string;
    /**
     * ``AWS::EC2::Route.EgressOnlyInternetGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid
     */
    egressOnlyInternetGatewayId?: string;
    /**
     * ``AWS::EC2::Route.GatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid
     */
    gatewayId?: string;
    /**
     * ``AWS::EC2::Route.InstanceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid
     */
    instanceId?: string;
    /**
     * ``AWS::EC2::Route.NatGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid
     */
    natGatewayId?: string;
    /**
     * ``AWS::EC2::Route.NetworkInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid
     */
    networkInterfaceId?: string;
    /**
     * ``AWS::EC2::Route.VpcPeeringConnectionId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid
     */
    vpcPeeringConnectionId?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
 */
export declare class CfnRoute extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::Route";
    readonly routeName: string;
    /**
     * Creates a new ``AWS::EC2::Route``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnRouteProps);
    readonly propertyOverrides: CfnRouteProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
 */
export interface CfnRouteTableProps {
    /**
     * ``AWS::EC2::RouteTable.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::RouteTable.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
 */
export declare class CfnRouteTable extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::RouteTable";
    readonly routeTableId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::RouteTable``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnRouteTableProps);
    readonly propertyOverrides: CfnRouteTableProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
 */
export interface CfnSecurityGroupProps {
    /**
     * ``AWS::EC2::SecurityGroup.GroupDescription``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription
     */
    groupDescription: string;
    /**
     * ``AWS::EC2::SecurityGroup.GroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname
     */
    groupName?: string;
    /**
     * ``AWS::EC2::SecurityGroup.SecurityGroupEgress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress
     */
    securityGroupEgress?: Array<CfnSecurityGroup.EgressProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::SecurityGroup.SecurityGroupIngress``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress
     */
    securityGroupIngress?: Array<CfnSecurityGroup.IngressProperty | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::SecurityGroup.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::SecurityGroup.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid
     */
    vpcId?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
 */
export declare class CfnSecurityGroup extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SecurityGroup";
    /**
     * @cloudformation_attribute GroupId
     */
    readonly securityGroupId: string;
    /**
     * @cloudformation_attribute VpcId
     */
    readonly securityGroupVpcId: string;
    readonly securityGroupName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::SecurityGroup``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSecurityGroupProps);
    readonly propertyOverrides: CfnSecurityGroupProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnSecurityGroup {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html
     */
    interface EgressProperty {
        /**
         * ``CfnSecurityGroup.EgressProperty.CidrIp``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip
         */
        cidrIp?: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.CidrIpv6``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6
         */
        cidrIpv6?: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.Description``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description
         */
        description?: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.DestinationPrefixListId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid
         */
        destinationPrefixListId?: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.DestinationSecurityGroupId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid
         */
        destinationSecurityGroupId?: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.FromPort``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport
         */
        fromPort?: number | cdk.Token;
        /**
         * ``CfnSecurityGroup.EgressProperty.IpProtocol``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol
         */
        ipProtocol: string;
        /**
         * ``CfnSecurityGroup.EgressProperty.ToPort``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport
         */
        toPort?: number | cdk.Token;
    }
}
export declare namespace CfnSecurityGroup {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html
     */
    interface IngressProperty {
        /**
         * ``CfnSecurityGroup.IngressProperty.CidrIp``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip
         */
        cidrIp?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.CidrIpv6``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6
         */
        cidrIpv6?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.Description``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description
         */
        description?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.FromPort``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport
         */
        fromPort?: number | cdk.Token;
        /**
         * ``CfnSecurityGroup.IngressProperty.IpProtocol``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol
         */
        ipProtocol: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.SourcePrefixListId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-securitygroup-ingress-sourceprefixlistid
         */
        sourcePrefixListId?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid
         */
        sourceSecurityGroupId?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname
         */
        sourceSecurityGroupName?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.SourceSecurityGroupOwnerId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid
         */
        sourceSecurityGroupOwnerId?: string;
        /**
         * ``CfnSecurityGroup.IngressProperty.ToPort``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport
         */
        toPort?: number | cdk.Token;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html
 */
export interface CfnSecurityGroupEgressProps {
    /**
     * ``AWS::EC2::SecurityGroupEgress.GroupId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid
     */
    groupId: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.IpProtocol``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol
     */
    ipProtocol: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.CidrIp``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip
     */
    cidrIp?: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.CidrIpv6``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6
     */
    cidrIpv6?: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description
     */
    description?: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.DestinationPrefixListId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid
     */
    destinationPrefixListId?: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid
     */
    destinationSecurityGroupId?: string;
    /**
     * ``AWS::EC2::SecurityGroupEgress.FromPort``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport
     */
    fromPort?: number | cdk.Token;
    /**
     * ``AWS::EC2::SecurityGroupEgress.ToPort``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport
     */
    toPort?: number | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html
 */
export declare class CfnSecurityGroupEgress extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SecurityGroupEgress";
    readonly securityGroupEgressId: string;
    /**
     * Creates a new ``AWS::EC2::SecurityGroupEgress``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSecurityGroupEgressProps);
    readonly propertyOverrides: CfnSecurityGroupEgressProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html
 */
export interface CfnSecurityGroupIngressProps {
    /**
     * ``AWS::EC2::SecurityGroupIngress.IpProtocol``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol
     */
    ipProtocol: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.CidrIp``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip
     */
    cidrIp?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.CidrIpv6``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6
     */
    cidrIpv6?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description
     */
    description?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.FromPort``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport
     */
    fromPort?: number | cdk.Token;
    /**
     * ``AWS::EC2::SecurityGroupIngress.GroupId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid
     */
    groupId?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.GroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname
     */
    groupName?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.SourcePrefixListId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid
     */
    sourcePrefixListId?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid
     */
    sourceSecurityGroupId?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname
     */
    sourceSecurityGroupName?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid
     */
    sourceSecurityGroupOwnerId?: string;
    /**
     * ``AWS::EC2::SecurityGroupIngress.ToPort``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport
     */
    toPort?: number | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html
 */
export declare class CfnSecurityGroupIngress extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SecurityGroupIngress";
    readonly securityGroupIngressId: string;
    /**
     * Creates a new ``AWS::EC2::SecurityGroupIngress``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSecurityGroupIngressProps);
    readonly propertyOverrides: CfnSecurityGroupIngressProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html
 */
export interface CfnSpotFleetProps {
    /**
     * ``AWS::EC2::SpotFleet.SpotFleetRequestConfigData``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata
     */
    spotFleetRequestConfigData: CfnSpotFleet.SpotFleetRequestConfigDataProperty | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html
 */
export declare class CfnSpotFleet extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SpotFleet";
    readonly spotFleetName: string;
    /**
     * Creates a new ``AWS::EC2::SpotFleet``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSpotFleetProps);
    readonly propertyOverrides: CfnSpotFleetProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html
     */
    interface BlockDeviceMappingProperty {
        /**
         * ``CfnSpotFleet.BlockDeviceMappingProperty.DeviceName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-devicename
         */
        deviceName: string;
        /**
         * ``CfnSpotFleet.BlockDeviceMappingProperty.Ebs``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-ebs
         */
        ebs?: CfnSpotFleet.EbsBlockDeviceProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.BlockDeviceMappingProperty.NoDevice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice
         */
        noDevice?: string;
        /**
         * ``CfnSpotFleet.BlockDeviceMappingProperty.VirtualName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname
         */
        virtualName?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html
     */
    interface ClassicLoadBalancerProperty {
        /**
         * ``CfnSpotFleet.ClassicLoadBalancerProperty.Name``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancer.html#cfn-ec2-spotfleet-classicloadbalancer-name
         */
        name: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html
     */
    interface ClassicLoadBalancersConfigProperty {
        /**
         * ``CfnSpotFleet.ClassicLoadBalancersConfigProperty.ClassicLoadBalancers``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-classicloadbalancersconfig.html#cfn-ec2-spotfleet-classicloadbalancersconfig-classicloadbalancers
         */
        classicLoadBalancers: Array<CfnSpotFleet.ClassicLoadBalancerProperty | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html
     */
    interface EbsBlockDeviceProperty {
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.Encrypted``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted
         */
        encrypted?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.Iops``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-iops
         */
        iops?: number | cdk.Token;
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.SnapshotId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid
         */
        snapshotId?: string;
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.VolumeSize``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize
         */
        volumeSize?: number | cdk.Token;
        /**
         * ``CfnSpotFleet.EbsBlockDeviceProperty.VolumeType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype
         */
        volumeType?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html
     */
    interface FleetLaunchTemplateSpecificationProperty {
        /**
         * ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplateid
         */
        launchTemplateId?: string;
        /**
         * ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.LaunchTemplateName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-launchtemplatename
         */
        launchTemplateName?: string;
        /**
         * ``CfnSpotFleet.FleetLaunchTemplateSpecificationProperty.Version``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-fleetlaunchtemplatespecification.html#cfn-ec2-spotfleet-fleetlaunchtemplatespecification-version
         */
        version: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html
     */
    interface GroupIdentifierProperty {
        /**
         * ``CfnSpotFleet.GroupIdentifierProperty.GroupId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html#cfn-ec2-spotfleet-groupidentifier-groupid
         */
        groupId: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html
     */
    interface IamInstanceProfileSpecificationProperty {
        /**
         * ``CfnSpotFleet.IamInstanceProfileSpecificationProperty.Arn``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn
         */
        arn?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html
     */
    interface InstanceIpv6AddressProperty {
        /**
         * ``CfnSpotFleet.InstanceIpv6AddressProperty.Ipv6Address``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address
         */
        ipv6Address: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html
     */
    interface InstanceNetworkInterfaceSpecificationProperty {
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.AssociatePublicIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress
         */
        associatePublicIpAddress?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeleteOnTermination``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination
         */
        deleteOnTermination?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Description``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description
         */
        description?: string;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.DeviceIndex``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex
         */
        deviceIndex?: number | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Groups``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups
         */
        groups?: Array<string | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6AddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount
         */
        ipv6AddressCount?: number | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.Ipv6Addresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses
         */
        ipv6Addresses?: Array<CfnSpotFleet.InstanceIpv6AddressProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.NetworkInterfaceId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid
         */
        networkInterfaceId?: string;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.PrivateIpAddresses``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses
         */
        privateIpAddresses?: Array<CfnSpotFleet.PrivateIpAddressSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SecondaryPrivateIpAddressCount``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount
         */
        secondaryPrivateIpAddressCount?: number | cdk.Token;
        /**
         * ``CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid
         */
        subnetId?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html
     */
    interface LaunchTemplateConfigProperty {
        /**
         * ``CfnSpotFleet.LaunchTemplateConfigProperty.LaunchTemplateSpecification``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-launchtemplatespecification
         */
        launchTemplateSpecification?: CfnSpotFleet.FleetLaunchTemplateSpecificationProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.LaunchTemplateConfigProperty.Overrides``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateconfig.html#cfn-ec2-spotfleet-launchtemplateconfig-overrides
         */
        overrides?: Array<CfnSpotFleet.LaunchTemplateOverridesProperty | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html
     */
    interface LaunchTemplateOverridesProperty {
        /**
         * ``CfnSpotFleet.LaunchTemplateOverridesProperty.AvailabilityZone``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-availabilityzone
         */
        availabilityZone?: string;
        /**
         * ``CfnSpotFleet.LaunchTemplateOverridesProperty.InstanceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-instancetype
         */
        instanceType?: string;
        /**
         * ``CfnSpotFleet.LaunchTemplateOverridesProperty.SpotPrice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-spotprice
         */
        spotPrice?: string;
        /**
         * ``CfnSpotFleet.LaunchTemplateOverridesProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-subnetid
         */
        subnetId?: string;
        /**
         * ``CfnSpotFleet.LaunchTemplateOverridesProperty.WeightedCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-launchtemplateoverrides.html#cfn-ec2-spotfleet-launchtemplateoverrides-weightedcapacity
         */
        weightedCapacity?: number | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html
     */
    interface LoadBalancersConfigProperty {
        /**
         * ``CfnSpotFleet.LoadBalancersConfigProperty.ClassicLoadBalancersConfig``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig
         */
        classicLoadBalancersConfig?: CfnSpotFleet.ClassicLoadBalancersConfigProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.LoadBalancersConfigProperty.TargetGroupsConfig``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig
         */
        targetGroupsConfig?: CfnSpotFleet.TargetGroupsConfigProperty | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html
     */
    interface PrivateIpAddressSpecificationProperty {
        /**
         * ``CfnSpotFleet.PrivateIpAddressSpecificationProperty.Primary``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-primary
         */
        primary?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.PrivateIpAddressSpecificationProperty.PrivateIpAddress``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress
         */
        privateIpAddress: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html
     */
    interface SpotFleetLaunchSpecificationProperty {
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.BlockDeviceMappings``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings
         */
        blockDeviceMappings?: Array<CfnSpotFleet.BlockDeviceMappingProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.EbsOptimized``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized
         */
        ebsOptimized?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.IamInstanceProfile``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile
         */
        iamInstanceProfile?: CfnSpotFleet.IamInstanceProfileSpecificationProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.ImageId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid
         */
        imageId: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.InstanceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype
         */
        instanceType: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KernelId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid
         */
        kernelId?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.KeyName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname
         */
        keyName?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Monitoring``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring
         */
        monitoring?: CfnSpotFleet.SpotFleetMonitoringProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.NetworkInterfaces``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces
         */
        networkInterfaces?: Array<CfnSpotFleet.InstanceNetworkInterfaceSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.Placement``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement
         */
        placement?: CfnSpotFleet.SpotPlacementProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.RamdiskId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid
         */
        ramdiskId?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SecurityGroups``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups
         */
        securityGroups?: Array<CfnSpotFleet.GroupIdentifierProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SpotPrice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice
         */
        spotPrice?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.SubnetId``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid
         */
        subnetId?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.TagSpecifications``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications
         */
        tagSpecifications?: Array<CfnSpotFleet.SpotFleetTagSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.UserData``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata
         */
        userData?: string;
        /**
         * ``CfnSpotFleet.SpotFleetLaunchSpecificationProperty.WeightedCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity
         */
        weightedCapacity?: number | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html
     */
    interface SpotFleetMonitoringProperty {
        /**
         * ``CfnSpotFleet.SpotFleetMonitoringProperty.Enabled``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled
         */
        enabled?: boolean | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html
     */
    interface SpotFleetRequestConfigDataProperty {
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.AllocationStrategy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy
         */
        allocationStrategy?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ExcessCapacityTerminationPolicy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy
         */
        excessCapacityTerminationPolicy?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.IamFleetRole``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole
         */
        iamFleetRole: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.InstanceInterruptionBehavior``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior
         */
        instanceInterruptionBehavior?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchSpecifications``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications
         */
        launchSpecifications?: Array<CfnSpotFleet.SpotFleetLaunchSpecificationProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LaunchTemplateConfigs``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs
         */
        launchTemplateConfigs?: Array<CfnSpotFleet.LaunchTemplateConfigProperty | cdk.Token> | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.LoadBalancersConfig``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig
         */
        loadBalancersConfig?: CfnSpotFleet.LoadBalancersConfigProperty | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ReplaceUnhealthyInstances``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances
         */
        replaceUnhealthyInstances?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.SpotPrice``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice
         */
        spotPrice?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.TargetCapacity``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity
         */
        targetCapacity: number | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.TerminateInstancesWithExpiration``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration
         */
        terminateInstancesWithExpiration?: boolean | cdk.Token;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.Type``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type
         */
        type?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidFrom``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom
         */
        validFrom?: string;
        /**
         * ``CfnSpotFleet.SpotFleetRequestConfigDataProperty.ValidUntil``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil
         */
        validUntil?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html
     */
    interface SpotFleetTagSpecificationProperty {
        /**
         * ``CfnSpotFleet.SpotFleetTagSpecificationProperty.ResourceType``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype
         */
        resourceType?: string;
        /**
         * ``CfnSpotFleet.SpotFleetTagSpecificationProperty.Tags``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-tags
         */
        tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html
     */
    interface SpotPlacementProperty {
        /**
         * ``CfnSpotFleet.SpotPlacementProperty.AvailabilityZone``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone
         */
        availabilityZone?: string;
        /**
         * ``CfnSpotFleet.SpotPlacementProperty.GroupName``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-groupname
         */
        groupName?: string;
        /**
         * ``CfnSpotFleet.SpotPlacementProperty.Tenancy``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-tenancy
         */
        tenancy?: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html
     */
    interface TargetGroupProperty {
        /**
         * ``CfnSpotFleet.TargetGroupProperty.Arn``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroup.html#cfn-ec2-spotfleet-targetgroup-arn
         */
        arn: string;
    }
}
export declare namespace CfnSpotFleet {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html
     */
    interface TargetGroupsConfigProperty {
        /**
         * ``CfnSpotFleet.TargetGroupsConfigProperty.TargetGroups``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-targetgroupsconfig.html#cfn-ec2-spotfleet-targetgroupsconfig-targetgroups
         */
        targetGroups: Array<CfnSpotFleet.TargetGroupProperty | cdk.Token> | cdk.Token;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
 */
export interface CfnSubnetProps {
    /**
     * ``AWS::EC2::Subnet.CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock
     */
    cidrBlock: string;
    /**
     * ``AWS::EC2::Subnet.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::Subnet.AssignIpv6AddressOnCreation``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation
     */
    assignIpv6AddressOnCreation?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Subnet.AvailabilityZone``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone
     */
    availabilityZone?: string;
    /**
     * ``AWS::EC2::Subnet.Ipv6CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock
     */
    ipv6CidrBlock?: string;
    /**
     * ``AWS::EC2::Subnet.MapPublicIpOnLaunch``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch
     */
    mapPublicIpOnLaunch?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Subnet.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
 */
export declare class CfnSubnet extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::Subnet";
    /**
     * @cloudformation_attribute AvailabilityZone
     */
    readonly subnetAvailabilityZone: string;
    /**
     * @cloudformation_attribute Ipv6CidrBlocks
     */
    readonly subnetIpv6CidrBlocks: string[];
    /**
     * @cloudformation_attribute NetworkAclAssociationId
     */
    readonly subnetNetworkAclAssociationId: string;
    /**
     * @cloudformation_attribute VpcId
     */
    readonly subnetVpcId: string;
    readonly subnetId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::Subnet``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSubnetProps);
    readonly propertyOverrides: CfnSubnetProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html
 */
export interface CfnSubnetCidrBlockProps {
    /**
     * ``AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock
     */
    ipv6CidrBlock: string;
    /**
     * ``AWS::EC2::SubnetCidrBlock.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid
     */
    subnetId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html
 */
export declare class CfnSubnetCidrBlock extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SubnetCidrBlock";
    readonly subnetCidrBlockId: string;
    /**
     * Creates a new ``AWS::EC2::SubnetCidrBlock``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSubnetCidrBlockProps);
    readonly propertyOverrides: CfnSubnetCidrBlockProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html
 */
export interface CfnSubnetNetworkAclAssociationProps {
    /**
     * ``AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid
     */
    networkAclId: string;
    /**
     * ``AWS::EC2::SubnetNetworkAclAssociation.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid
     */
    subnetId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html
 */
export declare class CfnSubnetNetworkAclAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SubnetNetworkAclAssociation";
    /**
     * @cloudformation_attribute AssociationId
     */
    readonly subnetNetworkAclAssociationAssociationId: string;
    readonly subnetNetworkAclAssociationName: string;
    /**
     * Creates a new ``AWS::EC2::SubnetNetworkAclAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSubnetNetworkAclAssociationProps);
    readonly propertyOverrides: CfnSubnetNetworkAclAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
 */
export interface CfnSubnetRouteTableAssociationProps {
    /**
     * ``AWS::EC2::SubnetRouteTableAssociation.RouteTableId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid
     */
    routeTableId: string;
    /**
     * ``AWS::EC2::SubnetRouteTableAssociation.SubnetId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid
     */
    subnetId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
 */
export declare class CfnSubnetRouteTableAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::SubnetRouteTableAssociation";
    readonly subnetRouteTableAssociationName: string;
    /**
     * Creates a new ``AWS::EC2::SubnetRouteTableAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnSubnetRouteTableAssociationProps);
    readonly propertyOverrides: CfnSubnetRouteTableAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html
 */
export interface CfnTransitGatewayProps {
    /**
     * ``AWS::EC2::TransitGateway.AmazonSideAsn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn
     */
    amazonSideAsn?: number | cdk.Token;
    /**
     * ``AWS::EC2::TransitGateway.AutoAcceptSharedAttachments``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments
     */
    autoAcceptSharedAttachments?: string;
    /**
     * ``AWS::EC2::TransitGateway.DefaultRouteTableAssociation``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation
     */
    defaultRouteTableAssociation?: string;
    /**
     * ``AWS::EC2::TransitGateway.DefaultRouteTablePropagation``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation
     */
    defaultRouteTablePropagation?: string;
    /**
     * ``AWS::EC2::TransitGateway.Description``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description
     */
    description?: string;
    /**
     * ``AWS::EC2::TransitGateway.DnsSupport``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport
     */
    dnsSupport?: string;
    /**
     * ``AWS::EC2::TransitGateway.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::TransitGateway.VpnEcmpSupport``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport
     */
    vpnEcmpSupport?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html
 */
export declare class CfnTransitGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGateway";
    readonly transitGatewayId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::TransitGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props?: CfnTransitGatewayProps);
    readonly propertyOverrides: CfnTransitGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html
 */
export interface CfnTransitGatewayAttachmentProps {
    /**
     * ``AWS::EC2::TransitGatewayAttachment.SubnetIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids
     */
    subnetIds: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::TransitGatewayAttachment.TransitGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid
     */
    transitGatewayId: string;
    /**
     * ``AWS::EC2::TransitGatewayAttachment.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::TransitGatewayAttachment.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html
 */
export declare class CfnTransitGatewayAttachment extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGatewayAttachment";
    readonly transitGatewayAttachmentId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::TransitGatewayAttachment``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTransitGatewayAttachmentProps);
    readonly propertyOverrides: CfnTransitGatewayAttachmentProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html
 */
export interface CfnTransitGatewayRouteProps {
    /**
     * ``AWS::EC2::TransitGatewayRoute.TransitGatewayRouteTableId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid
     */
    transitGatewayRouteTableId: string;
    /**
     * ``AWS::EC2::TransitGatewayRoute.Blackhole``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole
     */
    blackhole?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::TransitGatewayRoute.DestinationCidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock
     */
    destinationCidrBlock?: string;
    /**
     * ``AWS::EC2::TransitGatewayRoute.TransitGatewayAttachmentId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid
     */
    transitGatewayAttachmentId?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html
 */
export declare class CfnTransitGatewayRoute extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGatewayRoute";
    readonly transitGatewayRouteId: string;
    /**
     * Creates a new ``AWS::EC2::TransitGatewayRoute``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTransitGatewayRouteProps);
    readonly propertyOverrides: CfnTransitGatewayRouteProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html
 */
export interface CfnTransitGatewayRouteTableProps {
    /**
     * ``AWS::EC2::TransitGatewayRouteTable.TransitGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid
     */
    transitGatewayId: string;
    /**
     * ``AWS::EC2::TransitGatewayRouteTable.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html
 */
export declare class CfnTransitGatewayRouteTable extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGatewayRouteTable";
    readonly transitGatewayRouteTableId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::TransitGatewayRouteTable``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTransitGatewayRouteTableProps);
    readonly propertyOverrides: CfnTransitGatewayRouteTableProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html
 */
export interface CfnTransitGatewayRouteTableAssociationProps {
    /**
     * ``AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayAttachmentId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid
     */
    transitGatewayAttachmentId: string;
    /**
     * ``AWS::EC2::TransitGatewayRouteTableAssociation.TransitGatewayRouteTableId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid
     */
    transitGatewayRouteTableId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html
 */
export declare class CfnTransitGatewayRouteTableAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGatewayRouteTableAssociation";
    readonly transitGatewayRouteTableAssociationId: string;
    /**
     * Creates a new ``AWS::EC2::TransitGatewayRouteTableAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTransitGatewayRouteTableAssociationProps);
    readonly propertyOverrides: CfnTransitGatewayRouteTableAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html
 */
export interface CfnTransitGatewayRouteTablePropagationProps {
    /**
     * ``AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayAttachmentId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid
     */
    transitGatewayAttachmentId: string;
    /**
     * ``AWS::EC2::TransitGatewayRouteTablePropagation.TransitGatewayRouteTableId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid
     */
    transitGatewayRouteTableId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html
 */
export declare class CfnTransitGatewayRouteTablePropagation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TransitGatewayRouteTablePropagation";
    readonly transitGatewayRouteTablePropagationId: string;
    /**
     * Creates a new ``AWS::EC2::TransitGatewayRouteTablePropagation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTransitGatewayRouteTablePropagationProps);
    readonly propertyOverrides: CfnTransitGatewayRouteTablePropagationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html
 */
export interface CfnTrunkInterfaceAssociationProps {
    /**
     * ``AWS::EC2::TrunkInterfaceAssociation.BranchInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-branchinterfaceid
     */
    branchInterfaceId: string;
    /**
     * ``AWS::EC2::TrunkInterfaceAssociation.TrunkInterfaceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-trunkinterfaceid
     */
    trunkInterfaceId: string;
    /**
     * ``AWS::EC2::TrunkInterfaceAssociation.GREKey``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-grekey
     */
    greKey?: number | cdk.Token;
    /**
     * ``AWS::EC2::TrunkInterfaceAssociation.VLANId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-vlanid
     */
    vlanId?: number | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html
 */
export declare class CfnTrunkInterfaceAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::TrunkInterfaceAssociation";
    readonly trunkInterfaceAssociationId: string;
    /**
     * Creates a new ``AWS::EC2::TrunkInterfaceAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnTrunkInterfaceAssociationProps);
    readonly propertyOverrides: CfnTrunkInterfaceAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
 */
export interface CfnVPCProps {
    /**
     * ``AWS::EC2::VPC.CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock
     */
    cidrBlock: string;
    /**
     * ``AWS::EC2::VPC.EnableDnsHostnames``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames
     */
    enableDnsHostnames?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::VPC.EnableDnsSupport``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport
     */
    enableDnsSupport?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::VPC.InstanceTenancy``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy
     */
    instanceTenancy?: string;
    /**
     * ``AWS::EC2::VPC.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
 */
export declare class CfnVPC extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPC";
    /**
     * @cloudformation_attribute CidrBlock
     */
    readonly vpcCidrBlock: string;
    /**
     * @cloudformation_attribute CidrBlockAssociations
     */
    readonly vpcCidrBlockAssociations: string[];
    /**
     * @cloudformation_attribute DefaultNetworkAcl
     */
    readonly vpcDefaultNetworkAcl: string;
    /**
     * @cloudformation_attribute DefaultSecurityGroup
     */
    readonly vpcDefaultSecurityGroup: string;
    /**
     * @cloudformation_attribute Ipv6CidrBlocks
     */
    readonly vpcIpv6CidrBlocks: string[];
    readonly vpcId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::VPC``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCProps);
    readonly propertyOverrides: CfnVPCProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html
 */
export interface CfnVPCCidrBlockProps {
    /**
     * ``AWS::EC2::VPCCidrBlock.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock
     */
    amazonProvidedIpv6CidrBlock?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::VPCCidrBlock.CidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock
     */
    cidrBlock?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html
 */
export declare class CfnVPCCidrBlock extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCCidrBlock";
    readonly vpcCidrBlockId: string;
    /**
     * Creates a new ``AWS::EC2::VPCCidrBlock``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCCidrBlockProps);
    readonly propertyOverrides: CfnVPCCidrBlockProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html
 */
export interface CfnVPCDHCPOptionsAssociationProps {
    /**
     * ``AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid
     */
    dhcpOptionsId: string;
    /**
     * ``AWS::EC2::VPCDHCPOptionsAssociation.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid
     */
    vpcId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html
 */
export declare class CfnVPCDHCPOptionsAssociation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCDHCPOptionsAssociation";
    readonly vpcdhcpOptionsAssociationName: string;
    /**
     * Creates a new ``AWS::EC2::VPCDHCPOptionsAssociation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCDHCPOptionsAssociationProps);
    readonly propertyOverrides: CfnVPCDHCPOptionsAssociationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
 */
export interface CfnVPCEndpointProps {
    /**
     * ``AWS::EC2::VPCEndpoint.ServiceName``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename
     */
    serviceName: string;
    /**
     * ``AWS::EC2::VPCEndpoint.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::VPCEndpoint.PolicyDocument``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument
     */
    policyDocument?: object | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpoint.PrivateDnsEnabled``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled
     */
    privateDnsEnabled?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpoint.RouteTableIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids
     */
    routeTableIds?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpoint.SecurityGroupIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids
     */
    securityGroupIds?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpoint.SubnetIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids
     */
    subnetIds?: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpoint.VpcEndpointType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype
     */
    vpcEndpointType?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
 */
export declare class CfnVPCEndpoint extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCEndpoint";
    /**
     * @cloudformation_attribute CreationTimestamp
     */
    readonly vpcEndpointCreationTimestamp: string;
    /**
     * @cloudformation_attribute DnsEntries
     */
    readonly vpcEndpointDnsEntries: string[];
    /**
     * @cloudformation_attribute NetworkInterfaceIds
     */
    readonly vpcEndpointNetworkInterfaceIds: string[];
    readonly vpcEndpointId: string;
    /**
     * Creates a new ``AWS::EC2::VPCEndpoint``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCEndpointProps);
    readonly propertyOverrides: CfnVPCEndpointProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html
 */
export interface CfnVPCEndpointConnectionNotificationProps {
    /**
     * ``AWS::EC2::VPCEndpointConnectionNotification.ConnectionEvents``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
     */
    connectionEvents: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpointConnectionNotification.ConnectionNotificationArn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
     */
    connectionNotificationArn: string;
    /**
     * ``AWS::EC2::VPCEndpointConnectionNotification.ServiceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
     */
    serviceId?: string;
    /**
     * ``AWS::EC2::VPCEndpointConnectionNotification.VPCEndpointId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
     */
    vpcEndpointId?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html
 */
export declare class CfnVPCEndpointConnectionNotification extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCEndpointConnectionNotification";
    /**
     * Creates a new ``AWS::EC2::VPCEndpointConnectionNotification``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCEndpointConnectionNotificationProps);
    readonly propertyOverrides: CfnVPCEndpointConnectionNotificationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html
 */
export interface CfnVPCEndpointServiceProps {
    /**
     * ``AWS::EC2::VPCEndpointService.NetworkLoadBalancerArns``
     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns
     */
    networkLoadBalancerArns: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPCEndpointService.AcceptanceRequired``
     * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired
     */
    acceptanceRequired?: boolean | cdk.Token;
}
/**
 * @link https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html
 */
export declare class CfnVPCEndpointService extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCEndpointService";
    readonly vpcEndpointServiceId: string;
    /**
     * Creates a new ``AWS::EC2::VPCEndpointService``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCEndpointServiceProps);
    readonly propertyOverrides: CfnVPCEndpointServiceProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html
 */
export interface CfnVPCEndpointServicePermissionsProps {
    /**
     * ``AWS::EC2::VPCEndpointServicePermissions.ServiceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid
     */
    serviceId: string;
    /**
     * ``AWS::EC2::VPCEndpointServicePermissions.AllowedPrincipals``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals
     */
    allowedPrincipals?: Array<string | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html
 */
export declare class CfnVPCEndpointServicePermissions extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCEndpointServicePermissions";
    /**
     * Creates a new ``AWS::EC2::VPCEndpointServicePermissions``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCEndpointServicePermissionsProps);
    readonly propertyOverrides: CfnVPCEndpointServicePermissionsProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
 */
export interface CfnVPCGatewayAttachmentProps {
    /**
     * ``AWS::EC2::VPCGatewayAttachment.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::VPCGatewayAttachment.InternetGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid
     */
    internetGatewayId?: string;
    /**
     * ``AWS::EC2::VPCGatewayAttachment.VpnGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid
     */
    vpnGatewayId?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
 */
export declare class CfnVPCGatewayAttachment extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCGatewayAttachment";
    readonly vpcGatewayAttachmentName: string;
    /**
     * Creates a new ``AWS::EC2::VPCGatewayAttachment``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCGatewayAttachmentProps);
    readonly propertyOverrides: CfnVPCGatewayAttachmentProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
 */
export interface CfnVPCPeeringConnectionProps {
    /**
     * ``AWS::EC2::VPCPeeringConnection.PeerVpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
     */
    peerVpcId: string;
    /**
     * ``AWS::EC2::VPCPeeringConnection.VpcId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
     */
    vpcId: string;
    /**
     * ``AWS::EC2::VPCPeeringConnection.PeerOwnerId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
     */
    peerOwnerId?: string;
    /**
     * ``AWS::EC2::VPCPeeringConnection.PeerRegion``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
     */
    peerRegion?: string;
    /**
     * ``AWS::EC2::VPCPeeringConnection.PeerRoleArn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
     */
    peerRoleArn?: string;
    /**
     * ``AWS::EC2::VPCPeeringConnection.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
 */
export declare class CfnVPCPeeringConnection extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPCPeeringConnection";
    readonly vpcPeeringConnectionName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::VPCPeeringConnection``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPCPeeringConnectionProps);
    readonly propertyOverrides: CfnVPCPeeringConnectionProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html
 */
export interface CfnVPNConnectionProps {
    /**
     * ``AWS::EC2::VPNConnection.CustomerGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid
     */
    customerGatewayId: string;
    /**
     * ``AWS::EC2::VPNConnection.Type``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type
     */
    type: string;
    /**
     * ``AWS::EC2::VPNConnection.VpnGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid
     */
    vpnGatewayId: string;
    /**
     * ``AWS::EC2::VPNConnection.StaticRoutesOnly``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly
     */
    staticRoutesOnly?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::VPNConnection.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications
     */
    vpnTunnelOptionsSpecifications?: Array<CfnVPNConnection.VpnTunnelOptionsSpecificationProperty | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html
 */
export declare class CfnVPNConnection extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPNConnection";
    readonly vpnConnectionName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::VPNConnection``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPNConnectionProps);
    readonly propertyOverrides: CfnVPNConnectionProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
export declare namespace CfnVPNConnection {
    /**
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html
     */
    interface VpnTunnelOptionsSpecificationProperty {
        /**
         * ``CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.PreSharedKey``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey
         */
        preSharedKey?: string;
        /**
         * ``CfnVPNConnection.VpnTunnelOptionsSpecificationProperty.TunnelInsideCidr``
         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr
         */
        tunnelInsideCidr?: string;
    }
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html
 */
export interface CfnVPNConnectionRouteProps {
    /**
     * ``AWS::EC2::VPNConnectionRoute.DestinationCidrBlock``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock
     */
    destinationCidrBlock: string;
    /**
     * ``AWS::EC2::VPNConnectionRoute.VpnConnectionId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid
     */
    vpnConnectionId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html
 */
export declare class CfnVPNConnectionRoute extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPNConnectionRoute";
    readonly vpnConnectionRouteName: string;
    /**
     * Creates a new ``AWS::EC2::VPNConnectionRoute``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPNConnectionRouteProps);
    readonly propertyOverrides: CfnVPNConnectionRouteProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html
 */
export interface CfnVPNGatewayProps {
    /**
     * ``AWS::EC2::VPNGateway.Type``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type
     */
    type: string;
    /**
     * ``AWS::EC2::VPNGateway.AmazonSideAsn``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn
     */
    amazonSideAsn?: number | cdk.Token;
    /**
     * ``AWS::EC2::VPNGateway.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html
 */
export declare class CfnVPNGateway extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPNGateway";
    readonly vpnGatewayName: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::VPNGateway``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPNGatewayProps);
    readonly propertyOverrides: CfnVPNGatewayProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html
 */
export interface CfnVPNGatewayRoutePropagationProps {
    /**
     * ``AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids
     */
    routeTableIds: Array<string | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid
     */
    vpnGatewayId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html
 */
export declare class CfnVPNGatewayRoutePropagation extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VPNGatewayRoutePropagation";
    readonly vpnGatewayRoutePropagationName: string;
    /**
     * Creates a new ``AWS::EC2::VPNGatewayRoutePropagation``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVPNGatewayRoutePropagationProps);
    readonly propertyOverrides: CfnVPNGatewayRoutePropagationProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html
 */
export interface CfnVolumeProps {
    /**
     * ``AWS::EC2::Volume.AvailabilityZone``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone
     */
    availabilityZone: string;
    /**
     * ``AWS::EC2::Volume.AutoEnableIO``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio
     */
    autoEnableIo?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Volume.Encrypted``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted
     */
    encrypted?: boolean | cdk.Token;
    /**
     * ``AWS::EC2::Volume.Iops``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops
     */
    iops?: number | cdk.Token;
    /**
     * ``AWS::EC2::Volume.KmsKeyId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid
     */
    kmsKeyId?: string;
    /**
     * ``AWS::EC2::Volume.Size``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size
     */
    size?: number | cdk.Token;
    /**
     * ``AWS::EC2::Volume.SnapshotId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid
     */
    snapshotId?: string;
    /**
     * ``AWS::EC2::Volume.Tags``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags
     */
    tags?: Array<cdk.CfnTag | cdk.Token> | cdk.Token;
    /**
     * ``AWS::EC2::Volume.VolumeType``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype
     */
    volumeType?: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html
 */
export declare class CfnVolume extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::Volume";
    readonly volumeId: string;
    /**
     * The ``TagManager`` handles setting, removing and formatting tags
     *
     * Tags should be managed either passing them as properties during
     * initiation or by calling methods on this object. If both techniques are
     * used only the tags from the TagManager will be used. ``Tag`` (aspect)
     * will use the manager.
     */
    readonly tags: cdk.TagManager;
    /**
     * Creates a new ``AWS::EC2::Volume``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVolumeProps);
    readonly propertyOverrides: CfnVolumeProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html
 */
export interface CfnVolumeAttachmentProps {
    /**
     * ``AWS::EC2::VolumeAttachment.Device``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device
     */
    device: string;
    /**
     * ``AWS::EC2::VolumeAttachment.InstanceId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid
     */
    instanceId: string;
    /**
     * ``AWS::EC2::VolumeAttachment.VolumeId``
     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid
     */
    volumeId: string;
}
/**
 * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html
 */
export declare class CfnVolumeAttachment extends cdk.Resource {
    /**
     * The CloudFormation resource type name for this resource class.
     */
    static readonly resourceTypeName = "AWS::EC2::VolumeAttachment";
    readonly volumeAttachmentId: string;
    /**
     * Creates a new ``AWS::EC2::VolumeAttachment``.
     *
     * @param scope scope in which this resource is defined
     * @param id    scoped id of the resource
     * @param props resource properties
     */
    constructor(scope: cdk.Construct, id: string, props: CfnVolumeAttachmentProps);
    readonly propertyOverrides: CfnVolumeAttachmentProps;
    protected renderProperties(properties: any): {
        [key: string]: any;
    };
}
