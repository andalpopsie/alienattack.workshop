{
  "Resources": {
    "SecurityLayerFABI09041PostRegistrationFnRoleCE24FBDE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "RoleName": "FABI09041PostRegistrationFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041PostRegistrationFn_Role/Resource"
      }
    },
    "SecurityLayerFABI09041PostRegistration9E46E4E3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "SecurityLayerFABI09041PostRegistrationCodeS3BucketD229FB5E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SecurityLayerFABI09041PostRegistrationCodeS3VersionKey08666829"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SecurityLayerFABI09041PostRegistrationCodeS3VersionKey08666829"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041PostRegistrationFnRoleCE24FBDE",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "This function adds an user to the Players group after confirmation",
        "FunctionName": "FABI09041PostRegistrationFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "SecurityLayerFABI09041PostRegistrationFnRoleCE24FBDE"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041PostRegistration/Resource",
        "aws:asset:path": "asset.e6f369750e57d23358dd07d1e3121aae813f75525f4f45d3a915307bef8cc81a",
        "aws:asset:property": "Code"
      }
    },
    "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SingletonLambda24ab400649be3df4b03a519fdfc8b655187ED471",
            "Arn"
          ]
        },
        "AppName": "FABI09041",
        "UserPoolName": "FABI09041",
        "PostConfirmationLambdaArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041PostRegistration9E46E4E3",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041SimpleUserPoolCustomResource/Default"
      }
    },
    "SecurityLayerFABI09041UserPoolPerm1E16F8A6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "SecurityLayerFABI09041PostRegistration9E46E4E3"
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
            "UserPoolArn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041UserPoolPerm"
      }
    },
    "SecurityLayerFABI09041TriggerFunctionPolicy33B166C1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminAddUserToGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
                  "UserPoolArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AllowAddUserToGroup",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI09041PostRegistrationFnRoleCE24FBDE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041TriggerFunctionPolicy/Resource"
      }
    },
    "SecurityLayerFABI09041App614BB26A": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
            "UserPoolId"
          ]
        },
        "ClientName": "FABI09041Website",
        "ExplicitAuthFlows": [
          "USER_PASSWORD_AUTH"
        ],
        "GenerateSecret": false
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041App"
      }
    },
    "SecurityLayerFABI09041IdentityPool5ABA04BF": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": "FABI09041Website",
            "ProviderName": {
              "Fn::GetAtt": [
                "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
                "UserPoolProviderName"
              ]
            },
            "ServerSideTokenCheck": false
          }
        ],
        "IdentityPoolName": "FABI09041"
      },
      "DependsOn": [
        "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041IdentityPool"
      }
    },
    "SecurityLayerFABI09041PlayersRoleB889AED2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "SecurityLayerFABI09041IdentityPool5ABA04BF"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "FABI09041PlayersRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041PlayersRole/Resource"
      }
    },
    "SecurityLayerFABI09041PlayersRoleDefaultPolicy42917C8E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "apigateway:GET",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/config"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/session"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/scoreboard"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/GET/config"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/GET/session"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/GET/scoreboard"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "apigateway:POST",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/updatestatus"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/allocate"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/*/deallocate"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/POST/updatestatus"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/POST/allocate"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                      },
                      "/prod/POST/deallocate"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI09041PlayersRoleDefaultPolicy42917C8E",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI09041PlayersRoleB889AED2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041PlayersRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI09041Players68EADD33": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
            "UserPoolId"
          ]
        },
        "Description": "Players of the game.",
        "GroupName": "Players",
        "Precedence": 9999,
        "RoleArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041PlayersRoleB889AED2",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041Players"
      }
    },
    "SecurityLayerFABI09041ManagersRoleE077E002": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "SecurityLayerFABI09041IdentityPool5ABA04BF"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
        ],
        "RoleName": "FABI09041ManagersRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041ManagersRole/Resource"
      }
    },
    "SecurityLayerFABI09041ManagersRoleDefaultPolicy775E12E2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/FABI09041*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:DeleteParameters",
                "ssm:PutParameter",
                "ssm:DeleteParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/fabi09041/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "kinesis:GetShardIterator",
                "kinesis:DescribeStream",
                "kinesis:GetRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionConsumptionLayerFABI09041InputStream58225546",
                  "Arn"
                ]
              }
            },
            {
              "Action": "apigateway:*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
                    },
                    "/prod/*/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI09041ManagersRoleDefaultPolicy775E12E2",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI09041ManagersRoleE077E002"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041ManagersRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI09041Managers52F22E98": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
            "UserPoolId"
          ]
        },
        "Description": "Managers of the game.",
        "GroupName": "Managers",
        "Precedence": 0,
        "RoleArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041ManagersRoleE077E002",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041Managers"
      }
    },
    "SecurityLayerFABI09041UnauthRole77278B9F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "SecurityLayerFABI09041IdentityPool5ABA04BF"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "FABI09041UnauthRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041UnauthRole/Resource"
      }
    },
    "SecurityLayerFABI09041UnauthRoleDefaultPolicy88A9B95F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI09041UnauthRoleDefaultPolicy88A9B95F",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI09041UnauthRole77278B9F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041UnauthRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI09041IDPRolesB583A2CF": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041IdentityPool5ABA04BF",
            "Id"
          ]
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "SecurityLayerFABI09041PlayersRoleB889AED2",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "SecurityLayerFABI09041UnauthRole77278B9F",
              "Arn"
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SecurityLayer/FABI09041IDPRoles"
      }
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRole92586BF6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/ServiceRole/Resource"
      }
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRoleDefaultPolicy9C12F520": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cognito-idp:DeleteUserPool",
                "cognito-idp:CreateUserPool",
                "cognito-idp:UpdateUserPool",
                "cognito-idp:CreateUserPoolDomain",
                "cognito-idp:DeleteUserPoolDomain"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRoleDefaultPolicy9C12F520",
        "Roles": [
          {
            "Ref": "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRole92586BF6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655187ED471": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeS3Bucket2299F323"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeS3VersionKeyDFECB5FB"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeS3VersionKeyDFECB5FB"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRole92586BF6",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "Generates the UserPool using configuration not available on CDK",
        "Timeout": 300
      },
      "DependsOn": [
        "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRoleDefaultPolicy9C12F520",
        "SingletonLambda24ab400649be3df4b03a519fdfc8b655ServiceRole92586BF6"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/Resource",
        "aws:asset:path": "asset.b095b505c175f6aa6f0e9d92bbb8ff729cbcc525842abea1b87a75aab0cf6e94",
        "aws:asset:property": "Code"
      }
    },
    "ConfigurationLayerSSMParameterFABI09041Region9C48952C": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "AWS::Region"
        },
        "Name": "/fabi09041/region"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ConfigurationLayer/SSMParameterFABI09041Region"
      }
    },
    "ConfigurationLayerSSMParameterFABI09041ClientIdF292B9EA": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "FABI09041Website",
        "Name": "/fabi09041/clientid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ConfigurationLayer/SSMParameterFABI09041ClientId"
      }
    },
    "ConfigurationLayerSSMParameterFABI09041UserpoolId2526C7F4": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
            "UserPoolId"
          ]
        },
        "Name": "/fabi09041/userpoolid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ConfigurationLayer/SSMParameterFABI09041UserpoolId"
      }
    },
    "ConfigurationLayerSSMParameterFABI09041UserPoolURL29CB1888": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "cognito-idp.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com/",
              {
                "Fn::GetAtt": [
                  "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
                  "UserPoolId"
                ]
              }
            ]
          ]
        },
        "Name": "/fabi09041/userpoolurl"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ConfigurationLayer/SSMParameterFABI09041UserPoolURL"
      }
    },
    "ConfigurationLayerSSMParameterFABI09041IdentityPoolIdFA48B918": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "SecurityLayerFABI09041IdentityPool5ABA04BF",
        "Name": "/fabi09041/identitypoolid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ConfigurationLayer/SSMParameterFABI09041IdentityPoolId"
      }
    },
    "StorageStoragefabi09041appABB531E8": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "fabi09041.app",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "DELETE",
                "POST"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "WebsiteConfiguration": {
          "ErrorDocument": "error.html",
          "IndexDocument": "index.html"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/StorageStorage/fabi09041.app/Resource"
      }
    },
    "StorageStoragefabi09041raw5630DB7A": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "fabi09041.raw"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/StorageStorage/fabi09041.raw/Resource"
      }
    },
    "DatabaseLayerFABI09041Session5625DFD8": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI09041Session"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/DatabaseLayer/FABI09041Session/Resource"
      }
    },
    "DatabaseLayerFABI09041SessionControlCF35B79A": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI09041SessionControl"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/DatabaseLayer/FABI09041SessionControl/Resource"
      }
    },
    "DatabaseLayerFABI09041SessionTopXB7FD9C38": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI09041SessionTopX"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI09041/DatabaseLayer/FABI09041SessionTopX/Resource"
      }
    },
    "ProcessingLayerFABI09041AllocateGamerFnRole3BB7AB10": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "DatabaseLayerFABI09041SessionControlCF35B79A",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi09041/session"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          }
        ],
        "RoleName": "FABI09041AllocateGamerFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041AllocateGamerFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI09041AllocateGamerFn8ECB4D5C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI09041AllocateGamerFnCodeS3BucketD15A6457"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041AllocateGamerFnCodeS3VersionKeyBD9C2C65"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041AllocateGamerFnCodeS3VersionKeyBD9C2C65"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI09041AllocateGamerFnRole3BB7AB10",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function supports the allocation of gamers when the game is to start",
        "Environment": {
          "Variables": {
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI09041SessionControlCF35B79A"
            },
            "SESSION_PARAMETER": "/fabi09041/session"
          }
        },
        "FunctionName": "FABI09041AllocateGamerFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI09041AllocateGamerFnRole3BB7AB10"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041AllocateGamerFn/Resource",
        "aws:asset:path": "asset.5fbbde35634d5de13314b5da90dcda3b8db607c2163706500121b1ebd51b6a5e",
        "aws:asset:property": "Code"
      }
    },
    "ProcessingLayerFABI09041DeallocateGamerFnRoleA723B493": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "DatabaseLayerFABI09041SessionControlCF35B79A",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi09041/session"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          }
        ],
        "RoleName": "FABI09041DeallocateGamerFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041DeallocateGamerFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI09041DeallocateGamerFnDC2E1DD9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI09041DeallocateGamerFnCodeS3Bucket597E357F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041DeallocateGamerFnCodeS3VersionKey98E97A13"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041DeallocateGamerFnCodeS3VersionKey98E97A13"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI09041DeallocateGamerFnRoleA723B493",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function deallocates the gamer when a relevant event is identified (sign out, close window etc)",
        "Environment": {
          "Variables": {
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI09041SessionControlCF35B79A"
            },
            "SESSION_PARAMETER": "/fabi09041/session"
          }
        },
        "FunctionName": "FABI09041DeallocateGamerFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI09041DeallocateGamerFnRoleA723B493"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041DeallocateGamerFn/Resource",
        "aws:asset:path": "asset.528e7d9d6b52bad0f2d0b0aa4cec2ba3eb502637197cd918333ed586cf87c4b9",
        "aws:asset:property": "Code"
      }
    },
    "ProcessingLayerFABI09041DLQF89A4444": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "FABI09041DLQ"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041DLQ/Resource"
      }
    },
    "ProcessingLayerFABI09041ScoreboardFnRole0301E458": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:Batch*",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/FABI09041*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:Get*",
                    "ssm:List*"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi09041*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sqs:SendMessage",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ProcessingLayerFABI09041DLQF89A4444",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SQSPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:SubscribeToShard",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:DescribeStream"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "KinesisPermissions"
          }
        ],
        "RoleName": "FABI09041ScoreboardFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041ScoreboardFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI09041ScoreboardFn4489EF41": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI09041ScoreboardFnCodeS3Bucket4A6A82AB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041ScoreboardFnCodeS3VersionKey97907CD3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI09041ScoreboardFnCodeS3VersionKey97907CD3"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI09041ScoreboardFnRole0301E458",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function computes the scoreboard",
        "Environment": {
          "Variables": {
            "DLQ_URL": {
              "Ref": "ProcessingLayerFABI09041DLQF89A4444"
            },
            "SESSION_PARAMETER": "/fabi09041/session",
            "SESSION_TABLENAME": {
              "Ref": "DatabaseLayerFABI09041Session5625DFD8"
            },
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI09041SessionControlCF35B79A"
            },
            "SESSION_TOPX_TABLENAME": {
              "Ref": "DatabaseLayerFABI09041SessionTopXB7FD9C38"
            },
            "TopXValue": "10"
          }
        },
        "FunctionName": "FABI09041ScoreboardFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI09041ScoreboardFnRole0301E458"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/ProcessingLayer/FABI09041ScoreboardFn/Resource",
        "aws:asset:path": "asset.167a1cca886516d4c19847697df5b1c021e6595589c2e8d34e846ac75d92c10d",
        "aws:asset:property": "Code"
      }
    },
    "IngestionConsumptionLayerFABI09041InputStream58225546": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1,
        "Name": "FABI09041_InputStream",
        "RetentionPeriodHours": 24
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041InputStream/Resource"
      }
    },
    "IngestionConsumptionLayerFABI09041APIRoleEE278363": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ],
        "RoleName": "FABI09041API"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIRole/Resource"
      }
    },
    "IngestionConsumptionLayerFABI09041APIRoleDefaultPolicy6C81D027": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:InvokeAsync"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:lambda:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:FABI09041*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ssm:GetParameterHistory",
                "ssm:GetParametersByPath",
                "ssm:GetParameters",
                "ssm:GetParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/fabi09041/*"
                  ]
                ]
              }
            },
            {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseLayerFABI09041Session5625DFD8",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "DatabaseLayerFABI09041SessionTopXB7FD9C38",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionConsumptionLayerFABI09041InputStream58225546",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IngestionConsumptionLayerFABI09041APIRoleDefaultPolicy6C81D027",
        "Roles": [
          {
            "Ref": "IngestionConsumptionLayerFABI09041APIRoleEE278363"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIRole/DefaultPolicy/Resource"
      }
    },
    "IngestionConsumptionLayerFABI09041API32E48B9A": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "API supporting the application FABI09041",
        "Name": "fabi09041"
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041API"
      }
    },
    "IngestionConsumptionLayerFABI09041GTWResponseFD90683B": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"message\":$context.error.messageString}"
        }
      },
      "DependsOn": [
        "IngestionConsumptionLayerFABI09041API32E48B9A"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041GTWResponse"
      }
    },
    "IngestionConsumptionLayerFABI09041Authorizer7CE285A0": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "fabi09041Authorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "SecurityLayerFABI09041SimpleUserPoolCustomResourceDDFBF15B",
              "UserPoolArn"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041Authorizer"
      }
    },
    "IngestionConsumptionLayerFABI09041APIModelScoreboardResponseModelAD5D9888": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "ContentType": "application/json",
        "Description": "Scoreboard response model (for /scoreboard/GET)",
        "Name": "ScoreboardResponseModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ScoreboardResponseModel",
          "type": "object",
          "properties": {
            "Scoreboard": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GamerScore"
              }
            }
          },
          "definitions": {
            "GamerScore": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "integer"
                },
                "Score": {
                  "type": "integer"
                },
                "Level": {
                  "type": "integer"
                },
                "Shots": {
                  "type": "integer"
                },
                "Nickname": {
                  "type": "string"
                },
                "Lives": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIModelScoreboardResponseModel"
      }
    },
    "IngestionConsumptionLayerFABI09041APIModelGetParametersRequest437FF7C9": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "ContentType": "application/json",
        "Description": "Model to request SSM:GetParameters",
        "Name": "GetParametersRequest",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "GetParametersRequest",
          "type": "object",
          "properties": {
            "names": {
              "type": "array"
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIModelGetParametersRequest"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1A63756C6": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IngestionConsumptionLayerFABI09041API32E48B9A",
            "RootResourceId"
          ]
        },
        "PathPart": "v1",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1sessionA8713989": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "session",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1session"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1sessionGET71AA3032": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1sessionA8713989"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI09041Authorizer7CE285A0"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "\"$util.escapeJavaScript(\"$input.path('$').GetParameterResponse.GetParameterResult.Parameter.Value\").replaceAll(\"'\",'\"')\""
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": {
            "integration.request.querystring.Name": "'/fabi09041/session'",
            "integration.request.header.Authentication": "method.request.header.Authentication"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":ssm:action/GetParameter"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.Name": true,
          "method.request.header.Authentication": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1sessionGET"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1sessionOPTIONSF76D40F8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1sessionA8713989"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false,
              "method.response.header.Access-Control-Allow-Methods": false,
              "method.response.header.Access-Control-Allow-Headers": false
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1sessionOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1config44888B03": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "config",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1config"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1configGET73CD1354": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1config44888B03"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "\n                                #set($inputRoot = $input.path('$'))\n                                {\n                                    \"Parameters\" : [\n                                        #foreach($elem in $inputRoot.Parameters)\n                                        {\n                                            \"Name\" : \"$elem.Name\",\n                                            \"Value\" :  \"$util.escapeJavaScript(\"$elem.Value\").replaceAll(\"'\",'\"')\"\n                                        } \n                                        #if($foreach.hasNext),#end\n                                    #end\n                                ]\n                                }"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/x-amz-json-1.1'",
            "integration.request.header.X-Amz-Target": "'AmazonSSM.GetParameters'"
          },
          "RequestTemplates": {
            "application/json": "{\"Names\" : [\"/fabi09041/userpoolid\",\"/fabi09041/userpoolurl\",\"/fabi09041/clientid\",\"/fabi09041/identitypoolid\"]}"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":ssm:path//"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestModels": {
          "application/json": {
            "Ref": "IngestionConsumptionLayerFABI09041APIModelGetParametersRequest437FF7C9"
          }
        },
        "RequestParameters": {
          "method.request.header.Content-Type": true,
          "method.request.header.X-Amz-Target": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1configGET"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1configOPTIONSAAE89927": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1config44888B03"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1configOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1allocate53EF0DF5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "allocate",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1allocate"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1allocatePOST72C2773C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1allocate53EF0DF5"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI09041Authorizer7CE285A0"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProcessingLayerFABI09041AllocateGamerFn8ECB4D5C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1allocatePOST"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1allocateOPTIONSDE60E216": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1allocate53EF0DF5"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1allocateOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1deallocate470E2C78": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "deallocate",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1deallocate"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1deallocatePOST004DE8B3": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1deallocate470E2C78"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI09041Authorizer7CE285A0"
        },
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProcessingLayerFABI09041DeallocateGamerFnDC2E1DD9",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1deallocatePOST"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1deallocateOPTIONSDDFF5960": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1deallocate470E2C78"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1deallocateOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1scoreboardD873367E": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "scoreboard",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1scoreboard"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1scoreboardPOST2F96F482": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1scoreboardD873367E"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI09041Authorizer7CE285A0"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "#set($scoreboard = $input.path('$.Item.TopX.L'))\n                                        { \n                                        \"Scoreboard\" : [\n                                                #foreach($gamerScore in $scoreboard)\n                                                        {\n                                                            \"Score\" : $gamerScore.M.Score.N ,\n                                                            \"Level\" : $gamerScore.M.Level.N ,\n                                                            \"Shots\" : $gamerScore.M.Shots.N ,\n                                                            \"Nickname\" : \"$gamerScore.M.Nickname.S\" ,\n                                                            \"Lives\" : $gamerScore.M.Lives.N\n                                                        }#if($foreach.hasNext),#end\n                                                \n                                                #end\n                                            ]\n                                        }"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.querystring.sessionId": "method.request.querystring.sessionId"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\n                        \"TableName\" : \"",
                  {
                    "Ref": "DatabaseLayerFABI09041SessionTopXB7FD9C38"
                  },
                  "\",\n                        \"Key\" : {\n                            \"SessionId\" : {\n                                \"S\" : \"$input.params('sessionId')\"\n                            }\n                        }\n                    }"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/GetItem"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "IngestionConsumptionLayerFABI09041APIModelScoreboardResponseModelAD5D9888"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.sessionId": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1scoreboardPOST"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1scoreboardOPTIONS9D5ACB64": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1scoreboardD873367E"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1scoreboardOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1updatestatus7E0516C0": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1A63756C6"
        },
        "PathPart": "updatestatus",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1updatestatus"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1updatestatusPOSTF1FEBBD1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1updatestatus7E0516C0"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI09041Authorizer7CE285A0"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI09041APIRoleEE278363",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "#set($inputRoot = $input.path('$'))\n                        {\n                            \"Data\" : \"$util.base64Encode(\"$input.json('$')\")\",\n                            \"PartitionKey\" : $input.json('$.SessionId'),\n                            \"StreamName\" : \"",
                  {
                    "Ref": "IngestionConsumptionLayerFABI09041InputStream58225546"
                  },
                  "\"\n                        }"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":kinesis:action/PutRecord"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.header.Authentication": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1updatestatusPOST"
      }
    },
    "IngestionConsumptionLayerFABI09041APIv1updateStatusOPTIONSA1628CE4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI09041APIv1updatestatus7E0516C0"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIv1updateStatusOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI09041APIDeployment0D60C393": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI09041API32E48B9A"
        },
        "Description": "Production deployment",
        "StageName": "prod"
      },
      "DependsOn": [
        "IngestionConsumptionLayerFABI09041APIv1allocateOPTIONSDE60E216",
        "IngestionConsumptionLayerFABI09041APIv1allocatePOST72C2773C",
        "IngestionConsumptionLayerFABI09041APIv1configGET73CD1354",
        "IngestionConsumptionLayerFABI09041APIv1configOPTIONSAAE89927",
        "IngestionConsumptionLayerFABI09041APIv1deallocateOPTIONSDDFF5960",
        "IngestionConsumptionLayerFABI09041APIv1deallocatePOST004DE8B3",
        "IngestionConsumptionLayerFABI09041APIv1scoreboardOPTIONS9D5ACB64",
        "IngestionConsumptionLayerFABI09041APIv1scoreboardPOST2F96F482",
        "IngestionConsumptionLayerFABI09041APIv1sessionGET71AA3032",
        "IngestionConsumptionLayerFABI09041APIv1sessionOPTIONSF76D40F8",
        "IngestionConsumptionLayerFABI09041APIv1updateStatusOPTIONSA1628CE4",
        "IngestionConsumptionLayerFABI09041APIv1updatestatusPOSTF1FEBBD1"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI09041/IngestionConsumptionLayer/FABI09041APIDeployment"
      }
    }
  },
  "Parameters": {
    "SecurityLayerFABI09041PostRegistrationCodeS3BucketD229FB5E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI09041/SecurityLayer/FABI09041PostRegistration/Code\""
    },
    "SecurityLayerFABI09041PostRegistrationCodeS3VersionKey08666829": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI09041/SecurityLayer/FABI09041PostRegistration/Code\""
    },
    "SecurityLayerFABI09041PostRegistrationCodeArtifactHashAAC73B11": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI09041/SecurityLayer/FABI09041PostRegistration/Code\""
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeS3Bucket2299F323": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/Code\""
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeS3VersionKeyDFECB5FB": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/Code\""
    },
    "SingletonLambda24ab400649be3df4b03a519fdfc8b655CodeArtifactHash399C492C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI09041/SingletonLambda24ab400649be3df4b03a519fdfc8b655/Code\""
    },
    "ProcessingLayerFABI09041AllocateGamerFnCodeS3BucketD15A6457": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI09041/ProcessingLayer/FABI09041AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041AllocateGamerFnCodeS3VersionKeyBD9C2C65": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI09041/ProcessingLayer/FABI09041AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041AllocateGamerFnCodeArtifactHashC2CE6D64": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI09041/ProcessingLayer/FABI09041AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041DeallocateGamerFnCodeS3Bucket597E357F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI09041/ProcessingLayer/FABI09041DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041DeallocateGamerFnCodeS3VersionKey98E97A13": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI09041/ProcessingLayer/FABI09041DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041DeallocateGamerFnCodeArtifactHash9FAAAD19": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI09041/ProcessingLayer/FABI09041DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI09041ScoreboardFnCodeS3Bucket4A6A82AB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI09041/ProcessingLayer/FABI09041ScoreboardFn/Code\""
    },
    "ProcessingLayerFABI09041ScoreboardFnCodeS3VersionKey97907CD3": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI09041/ProcessingLayer/FABI09041ScoreboardFn/Code\""
    },
    "ProcessingLayerFABI09041ScoreboardFnCodeArtifactHashA622A9D6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI09041/ProcessingLayer/FABI09041ScoreboardFn/Code\""
    }
  }
}