{
  "Resources": {
    "SecurityLayerFABI0904PostRegistrationFnRole83A2591A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "RoleName": "FABI0904PostRegistrationFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904PostRegistrationFn_Role/Resource"
      }
    },
    "SecurityLayerFABI0904PostRegistration974E7779": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "SecurityLayerFABI0904PostRegistrationCodeS3BucketBCBB5811"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SecurityLayerFABI0904PostRegistrationCodeS3VersionKey413C574C"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SecurityLayerFABI0904PostRegistrationCodeS3VersionKey413C574C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904PostRegistrationFnRole83A2591A",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "This function adds an user to the Players group after confirmation",
        "FunctionName": "FABI0904PostRegistrationFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "SecurityLayerFABI0904PostRegistrationFnRole83A2591A"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904PostRegistration/Resource",
        "aws:asset:path": "asset.e6f369750e57d23358dd07d1e3121aae813f75525f4f45d3a915307bef8cc81a",
        "aws:asset:property": "Code"
      }
    },
    "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SingletonLambda2c52540be74f3380bfba17cafee565b94E178DF4",
            "Arn"
          ]
        },
        "AppName": "FABI0904",
        "UserPoolName": "FABI0904",
        "PostConfirmationLambdaArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904PostRegistration974E7779",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904SimpleUserPoolCustomResource/Default"
      }
    },
    "SecurityLayerFABI0904UserPoolPermAC45AE53": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Ref": "SecurityLayerFABI0904PostRegistration974E7779"
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
            "UserPoolArn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904UserPoolPerm"
      }
    },
    "SecurityLayerFABI0904TriggerFunctionPolicy8E8557C5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminAddUserToGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
                  "UserPoolArn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AllowAddUserToGroup",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI0904PostRegistrationFnRole83A2591A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904TriggerFunctionPolicy/Resource"
      }
    },
    "SecurityLayerFABI0904AppB07EC18F": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
            "UserPoolId"
          ]
        },
        "ClientName": "FABI0904Website",
        "ExplicitAuthFlows": [
          "USER_PASSWORD_AUTH"
        ],
        "GenerateSecret": false
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904App"
      }
    },
    "SecurityLayerFABI0904IdentityPool19AFE0A9": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": "FABI0904Website",
            "ProviderName": {
              "Fn::GetAtt": [
                "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
                "UserPoolProviderName"
              ]
            },
            "ServerSideTokenCheck": false
          }
        ],
        "IdentityPoolName": "FABI0904"
      },
      "DependsOn": [
        "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904IdentityPool"
      }
    },
    "SecurityLayerFABI0904PlayersRole6037C0E7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "SecurityLayerFABI0904IdentityPool19AFE0A9"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "FABI0904PlayersRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904PlayersRole/Resource"
      }
    },
    "SecurityLayerFABI0904PlayersRoleDefaultPolicyBE169B57": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "apigateway:GET",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/config"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/session"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/scoreboard"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/GET/config"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/GET/session"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/GET/scoreboard"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "apigateway:POST",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/updatestatus"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/allocate"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/*/deallocate"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/POST/updatestatus"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/POST/allocate"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                      },
                      "/prod/POST/deallocate"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI0904PlayersRoleDefaultPolicyBE169B57",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI0904PlayersRole6037C0E7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904PlayersRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI0904Players049C2FE8": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
            "UserPoolId"
          ]
        },
        "Description": "Players of the game.",
        "GroupName": "Players",
        "Precedence": 9999,
        "RoleArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904PlayersRole6037C0E7",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904Players"
      }
    },
    "SecurityLayerFABI0904ManagersRole55E8E0CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "SecurityLayerFABI0904IdentityPool19AFE0A9"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
        ],
        "RoleName": "FABI0904ManagersRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904ManagersRole/Resource"
      }
    },
    "SecurityLayerFABI0904ManagersRoleDefaultPolicyD6698705": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:GetItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/FABI0904*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:DeleteParameters",
                "ssm:PutParameter",
                "ssm:DeleteParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/fabi0904/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "kinesis:GetShardIterator",
                "kinesis:DescribeStream",
                "kinesis:GetRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionConsumptionLayerFABI0904InputStream364A7EE0",
                  "Arn"
                ]
              }
            },
            {
              "Action": "apigateway:*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
                    },
                    "/prod/*/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI0904ManagersRoleDefaultPolicyD6698705",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI0904ManagersRole55E8E0CF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904ManagersRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI0904Managers7EF9C8B7": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
            "UserPoolId"
          ]
        },
        "Description": "Managers of the game.",
        "GroupName": "Managers",
        "Precedence": 0,
        "RoleArn": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904ManagersRole55E8E0CF",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904Managers"
      }
    },
    "SecurityLayerFABI0904UnauthRole1A760EF5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "SecurityLayerFABI0904IdentityPool19AFE0A9"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "FABI0904UnauthRole"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904UnauthRole/Resource"
      }
    },
    "SecurityLayerFABI0904UnauthRoleDefaultPolicyD9305D40": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SecurityLayerFABI0904UnauthRoleDefaultPolicyD9305D40",
        "Roles": [
          {
            "Ref": "SecurityLayerFABI0904UnauthRole1A760EF5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904UnauthRole/DefaultPolicy/Resource"
      }
    },
    "SecurityLayerFABI0904IDPRoles287DEFFB": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "SecurityLayerFABI0904IdentityPool19AFE0A9"
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "SecurityLayerFABI0904PlayersRole6037C0E7",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "SecurityLayerFABI0904UnauthRole1A760EF5",
              "Arn"
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SecurityLayer/FABI0904IDPRoles"
      }
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleC69DFBD3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/ServiceRole/Resource"
      }
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleDefaultPolicy2F763FE3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cognito-idp:DeleteUserPool",
                "cognito-idp:CreateUserPool",
                "cognito-idp:UpdateUserPool",
                "cognito-idp:CreateUserPoolDomain",
                "cognito-idp:DeleteUserPoolDomain"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleDefaultPolicy2F763FE3",
        "Roles": [
          {
            "Ref": "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleC69DFBD3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b94E178DF4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeS3Bucket96B675B5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeS3VersionKeyFB3A7CCA"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeS3VersionKeyFB3A7CCA"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleC69DFBD3",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "Generates the UserPool using configuration not available on CDK",
        "Timeout": 300
      },
      "DependsOn": [
        "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleDefaultPolicy2F763FE3",
        "SingletonLambda2c52540be74f3380bfba17cafee565b9ServiceRoleC69DFBD3"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/Resource",
        "aws:asset:path": "asset.e39118d11f89ede71cfaa874b9ff60359469d187f4ce6d2e7dfed4c5ee9466d6",
        "aws:asset:property": "Code"
      }
    },
    "ConfigurationLayerSSMParameterFABI0904Region86EACE53": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "AWS::Region"
        },
        "Name": "/fabi0904/region"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ConfigurationLayer/SSMParameterFABI0904Region"
      }
    },
    "ConfigurationLayerSSMParameterFABI0904ClientId545F8579": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "FABI0904Website",
        "Name": "/fabi0904/clientid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ConfigurationLayer/SSMParameterFABI0904ClientId"
      }
    },
    "ConfigurationLayerSSMParameterFABI0904UserpoolIdC6E3D85F": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
            "UserPoolId"
          ]
        },
        "Name": "/fabi0904/userpoolid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ConfigurationLayer/SSMParameterFABI0904UserpoolId"
      }
    },
    "ConfigurationLayerSSMParameterFABI0904UserPoolURLF49910DD": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "cognito-idp.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com/",
              {
                "Fn::GetAtt": [
                  "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
                  "UserPoolId"
                ]
              }
            ]
          ]
        },
        "Name": "/fabi0904/userpoolurl"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ConfigurationLayer/SSMParameterFABI0904UserPoolURL"
      }
    },
    "ConfigurationLayerSSMParameterFABI0904IdentityPoolIdCD911EE1": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "SecurityLayerFABI0904IdentityPool19AFE0A9"
        },
        "Name": "/fabi0904/identitypoolid"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ConfigurationLayer/SSMParameterFABI0904IdentityPoolId"
      }
    },
    "StorageStoragefabi0904app9706AEDA": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "fabi0904.app",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "DELETE",
                "POST"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        },
        "WebsiteConfiguration": {
          "ErrorDocument": "error.html",
          "IndexDocument": "index.html"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/StorageStorage/fabi0904.app/Resource"
      }
    },
    "StorageStoragefabi0904rawC513211C": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "fabi0904.raw"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/StorageStorage/fabi0904.raw/Resource"
      }
    },
    "DatabaseLayerFABI0904Session72107F4C": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI0904Session"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/DatabaseLayer/FABI0904Session/Resource"
      }
    },
    "DatabaseLayerFABI0904SessionControl08CA5A37": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI0904SessionControl"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/DatabaseLayer/FABI0904SessionControl/Resource"
      }
    },
    "DatabaseLayerFABI0904SessionTopX0E75F4A2": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "SessionId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "SessionId",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "FABI0904SessionTopX"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "FABI0904/DatabaseLayer/FABI0904SessionTopX/Resource"
      }
    },
    "ProcessingLayerFABI0904AllocateGamerFnRoleAEDCAF34": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "DatabaseLayerFABI0904SessionControl08CA5A37",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi0904/session"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          }
        ],
        "RoleName": "FABI0904AllocateGamerFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904AllocateGamerFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI0904AllocateGamerFnE8F6E49C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI0904AllocateGamerFnCodeS3BucketD597F0F4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904AllocateGamerFnCodeS3VersionKeyE1341B6A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904AllocateGamerFnCodeS3VersionKeyE1341B6A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI0904AllocateGamerFnRoleAEDCAF34",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function supports the allocation of gamers when the game is to start",
        "Environment": {
          "Variables": {
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI0904SessionControl08CA5A37"
            },
            "SESSION_PARAMETER": "/fabi0904/session"
          }
        },
        "FunctionName": "FABI0904AllocateGamerFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI0904AllocateGamerFnRoleAEDCAF34"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904AllocateGamerFn/Resource",
        "aws:asset:path": "asset.5fbbde35634d5de13314b5da90dcda3b8db607c2163706500121b1ebd51b6a5e",
        "aws:asset:property": "Code"
      }
    },
    "ProcessingLayerFABI0904DeallocateGamerFnRole3C90C696": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "DatabaseLayerFABI0904SessionControl08CA5A37",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi0904/session"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          }
        ],
        "RoleName": "FABI0904DeallocateGamerFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904DeallocateGamerFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI0904DeallocateGamerFn87B59B9E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI0904DeallocateGamerFnCodeS3BucketC9D29EC2"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904DeallocateGamerFnCodeS3VersionKeyDED81630"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904DeallocateGamerFnCodeS3VersionKeyDED81630"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI0904DeallocateGamerFnRole3C90C696",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function deallocates the gamer when a relevant event is identified (sign out, close window etc)",
        "Environment": {
          "Variables": {
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI0904SessionControl08CA5A37"
            },
            "SESSION_PARAMETER": "/fabi0904/session"
          }
        },
        "FunctionName": "FABI0904DeallocateGamerFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI0904DeallocateGamerFnRole3C90C696"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904DeallocateGamerFn/Resource",
        "aws:asset:path": "asset.528e7d9d6b52bad0f2d0b0aa4cec2ba3eb502637197cd918333ed586cf87c4b9",
        "aws:asset:property": "Code"
      }
    },
    "ProcessingLayerFABI0904DLQ315CC076": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "FABI0904DLQ"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904DLQ/Resource"
      }
    },
    "ProcessingLayerFABI0904ScoreboardFnRoleE4D704CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:Batch*",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/FABI0904*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:Get*",
                    "ssm:List*"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:ssm:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":parameter/fabi0904*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SystemsManagerPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sqs:SendMessage",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ProcessingLayerFABI0904DLQ315CC076",
                      "Arn"
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "SQSPermissions"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "kinesis:SubscribeToShard",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords",
                    "kinesis:DescribeStream"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "KinesisPermissions"
          }
        ],
        "RoleName": "FABI0904ScoreboardFn_Role"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904ScoreboardFn_Role/Resource"
      }
    },
    "ProcessingLayerFABI0904ScoreboardFnCE8261DE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ProcessingLayerFABI0904ScoreboardFnCodeS3Bucket1CADA449"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904ScoreboardFnCodeS3VersionKey26DC9788"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "ProcessingLayerFABI0904ScoreboardFnCodeS3VersionKey26DC9788"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ProcessingLayerFABI0904ScoreboardFnRoleE4D704CF",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Description": "This function computes the scoreboard",
        "Environment": {
          "Variables": {
            "DLQ_URL": {
              "Ref": "ProcessingLayerFABI0904DLQ315CC076"
            },
            "SESSION_PARAMETER": "/fabi0904/session",
            "SESSION_TABLENAME": {
              "Ref": "DatabaseLayerFABI0904Session72107F4C"
            },
            "SESSION_CONTROL_TABLENAME": {
              "Ref": "DatabaseLayerFABI0904SessionControl08CA5A37"
            },
            "SESSION_TOPX_TABLENAME": {
              "Ref": "DatabaseLayerFABI0904SessionTopX0E75F4A2"
            },
            "TopXValue": "10"
          }
        },
        "FunctionName": "FABI0904ScoreboardFn",
        "MemorySize": 128,
        "Timeout": 60
      },
      "DependsOn": [
        "ProcessingLayerFABI0904ScoreboardFnRoleE4D704CF"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/ProcessingLayer/FABI0904ScoreboardFn/Resource",
        "aws:asset:path": "asset.167a1cca886516d4c19847697df5b1c021e6595589c2e8d34e846ac75d92c10d",
        "aws:asset:property": "Code"
      }
    },
    "IngestionConsumptionLayerFABI0904InputStream364A7EE0": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1,
        "Name": "FABI0904_InputStream",
        "RetentionPeriodHours": 24
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904InputStream/Resource"
      }
    },
    "IngestionConsumptionLayerFABI0904APIRole4660A951": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ],
        "RoleName": "FABI0904API"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIRole/Resource"
      }
    },
    "IngestionConsumptionLayerFABI0904APIRoleDefaultPolicy06524512": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:InvokeAsync"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:lambda:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:FABI0904*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ssm:GetParameterHistory",
                "ssm:GetParametersByPath",
                "ssm:GetParameters",
                "ssm:GetParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/fabi0904/*"
                  ]
                ]
              }
            },
            {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DatabaseLayerFABI0904Session72107F4C",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "DatabaseLayerFABI0904SessionTopX0E75F4A2",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IngestionConsumptionLayerFABI0904InputStream364A7EE0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "IngestionConsumptionLayerFABI0904APIRoleDefaultPolicy06524512",
        "Roles": [
          {
            "Ref": "IngestionConsumptionLayerFABI0904APIRole4660A951"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIRole/DefaultPolicy/Resource"
      }
    },
    "IngestionConsumptionLayerFABI0904APIE94B2E55": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "API supporting the application FABI0904",
        "Name": "fabi0904"
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904API"
      }
    },
    "IngestionConsumptionLayerFABI0904GTWResponseE6D8D203": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Origin": "'*'"
        },
        "ResponseTemplates": {
          "application/json": "{\"message\":$context.error.messageString}"
        }
      },
      "DependsOn": [
        "IngestionConsumptionLayerFABI0904APIE94B2E55"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904GTWResponse"
      }
    },
    "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "Name": "fabi0904Authorizer",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "SecurityLayerFABI0904SimpleUserPoolCustomResource6A15B6E9",
              "UserPoolArn"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904Authorizer"
      }
    },
    "IngestionConsumptionLayerFABI0904APIModelScoreboardResponseModelEA0D4A67": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "ContentType": "application/json",
        "Description": "Scoreboard response model (for /scoreboard/GET)",
        "Name": "ScoreboardResponseModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "ScoreboardResponseModel",
          "type": "object",
          "properties": {
            "Scoreboard": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GamerScore"
              }
            }
          },
          "definitions": {
            "GamerScore": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "integer"
                },
                "Score": {
                  "type": "integer"
                },
                "Level": {
                  "type": "integer"
                },
                "Shots": {
                  "type": "integer"
                },
                "Nickname": {
                  "type": "string"
                },
                "Lives": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIModelScoreboardResponseModel"
      }
    },
    "IngestionConsumptionLayerFABI0904APIModelGetParametersRequestE191816F": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "ContentType": "application/json",
        "Description": "Model to request SSM:GetParameters",
        "Name": "GetParametersRequest",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "GetParametersRequest",
          "type": "object",
          "properties": {
            "names": {
              "type": "array"
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIModelGetParametersRequest"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv16F4CCD65": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IngestionConsumptionLayerFABI0904APIE94B2E55",
            "RootResourceId"
          ]
        },
        "PathPart": "v1",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1sessionE323A777": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "session",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1session"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1sessionGETA6A81C5C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1sessionE323A777"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "\"$util.escapeJavaScript(\"$input.path('$').GetParameterResponse.GetParameterResult.Parameter.Value\").replaceAll(\"'\",'\"')\""
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestParameters": {
            "integration.request.querystring.Name": "'/fabi0904/session'",
            "integration.request.header.Authentication": "method.request.header.Authentication"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":ssm:action/GetParameter"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.Name": true,
          "method.request.header.Authentication": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1sessionGET"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1sessionOPTIONS92BB05D3": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1sessionE323A777"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false,
              "method.response.header.Access-Control-Allow-Methods": false,
              "method.response.header.Access-Control-Allow-Headers": false
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1sessionOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1configBCE1644F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "config",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1config"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1configGETD0282C5D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1configBCE1644F"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "\n                                #set($inputRoot = $input.path('$'))\n                                {\n                                    \"Parameters\" : [\n                                        #foreach($elem in $inputRoot.Parameters)\n                                        {\n                                            \"Name\" : \"$elem.Name\",\n                                            \"Value\" :  \"$util.escapeJavaScript(\"$elem.Value\").replaceAll(\"'\",'\"')\"\n                                        } \n                                        #if($foreach.hasNext),#end\n                                    #end\n                                ]\n                                }"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/x-amz-json-1.1'",
            "integration.request.header.X-Amz-Target": "'AmazonSSM.GetParameters'"
          },
          "RequestTemplates": {
            "application/json": "{\"Names\" : [\"/fabi0904/userpoolid\",\"/fabi0904/userpoolurl\",\"/fabi0904/clientid\",\"/fabi0904/identitypoolid\"]}"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":ssm:path//"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestModels": {
          "application/json": {
            "Ref": "IngestionConsumptionLayerFABI0904APIModelGetParametersRequestE191816F"
          }
        },
        "RequestParameters": {
          "method.request.header.Content-Type": true,
          "method.request.header.X-Amz-Target": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1configGET"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1configOPTIONS2936C589": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1configBCE1644F"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1configOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1allocateE6A97E69": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "allocate",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1allocate"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1allocatePOSTEA9A5342": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1allocateE6A97E69"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProcessingLayerFABI0904AllocateGamerFnE8F6E49C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1allocatePOST"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1allocateOPTIONSEE33AF57": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1allocateE6A97E69"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1allocateOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1deallocateE4A4BAB3": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "deallocate",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1deallocate"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1deallocatePOST6FF2B501": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1deallocateE4A4BAB3"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2"
        },
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ProcessingLayerFABI0904DeallocateGamerFn87B59B9E",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1deallocatePOST"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1deallocateOPTIONS739E95AC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1deallocateE4A4BAB3"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1deallocateOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1scoreboard9D411C80": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "scoreboard",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1scoreboard"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1scoreboardPOSTC450CE43": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1scoreboard9D411C80"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "#set($scoreboard = $input.path('$.Item.TopX.L'))\n                                        { \n                                        \"Scoreboard\" : [\n                                                #foreach($gamerScore in $scoreboard)\n                                                        {\n                                                            \"Score\" : $gamerScore.M.Score.N ,\n                                                            \"Level\" : $gamerScore.M.Level.N ,\n                                                            \"Shots\" : $gamerScore.M.Shots.N ,\n                                                            \"Nickname\" : \"$gamerScore.M.Nickname.S\" ,\n                                                            \"Lives\" : $gamerScore.M.Lives.N\n                                                        }#if($foreach.hasNext),#end\n                                                \n                                                #end\n                                            ]\n                                        }"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.querystring.sessionId": "method.request.querystring.sessionId"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{\n                        \"TableName\" : \"",
                  {
                    "Ref": "DatabaseLayerFABI0904SessionTopX0E75F4A2"
                  },
                  "\",\n                        \"Key\" : {\n                            \"SessionId\" : {\n                                \"S\" : \"$input.params('sessionId')\"\n                            }\n                        }\n                    }"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":dynamodb:action/GetItem"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "IngestionConsumptionLayerFABI0904APIModelScoreboardResponseModelEA0D4A67"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.sessionId": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1scoreboardPOST"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1scoreboardOPTIONS224CEFD6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1scoreboard9D411C80"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1scoreboardOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1updatestatusBE0F6F73": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv16F4CCD65"
        },
        "PathPart": "updatestatus",
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1updatestatus"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1updatestatusPOSTB469975F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1updatestatusBE0F6F73"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "IngestionConsumptionLayerFABI0904AuthorizerEC2CADE2"
        },
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IngestionConsumptionLayerFABI0904APIRole4660A951",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "#set($inputRoot = $input.path('$'))\n                        {\n                            \"Data\" : \"$util.base64Encode(\"$input.json('$')\")\",\n                            \"PartitionKey\" : $input.json('$.SessionId'),\n                            \"StreamName\" : \"",
                  {
                    "Ref": "IngestionConsumptionLayerFABI0904InputStream364A7EE0"
                  },
                  "\"\n                        }"
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":kinesis:action/PutRecord"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.header.Authentication": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1updatestatusPOST"
      }
    },
    "IngestionConsumptionLayerFABI0904APIv1updateStatusOPTIONS4E5554FB": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIv1updatestatusBE0F6F73"
        },
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "when_no_match",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIv1updateStatusOPTIONS"
      }
    },
    "IngestionConsumptionLayerFABI0904APIDeploymentDDA115A1": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "IngestionConsumptionLayerFABI0904APIE94B2E55"
        },
        "Description": "Production deployment",
        "StageName": "prod"
      },
      "DependsOn": [
        "IngestionConsumptionLayerFABI0904APIv1allocateOPTIONSEE33AF57",
        "IngestionConsumptionLayerFABI0904APIv1allocatePOSTEA9A5342",
        "IngestionConsumptionLayerFABI0904APIv1configGETD0282C5D",
        "IngestionConsumptionLayerFABI0904APIv1configOPTIONS2936C589",
        "IngestionConsumptionLayerFABI0904APIv1deallocateOPTIONS739E95AC",
        "IngestionConsumptionLayerFABI0904APIv1deallocatePOST6FF2B501",
        "IngestionConsumptionLayerFABI0904APIv1scoreboardOPTIONS224CEFD6",
        "IngestionConsumptionLayerFABI0904APIv1scoreboardPOSTC450CE43",
        "IngestionConsumptionLayerFABI0904APIv1sessionGETA6A81C5C",
        "IngestionConsumptionLayerFABI0904APIv1sessionOPTIONS92BB05D3",
        "IngestionConsumptionLayerFABI0904APIv1updateStatusOPTIONS4E5554FB",
        "IngestionConsumptionLayerFABI0904APIv1updatestatusPOSTB469975F"
      ],
      "Metadata": {
        "aws:cdk:path": "FABI0904/IngestionConsumptionLayer/FABI0904APIDeployment"
      }
    }
  },
  "Parameters": {
    "SecurityLayerFABI0904PostRegistrationCodeS3BucketBCBB5811": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI0904/SecurityLayer/FABI0904PostRegistration/Code\""
    },
    "SecurityLayerFABI0904PostRegistrationCodeS3VersionKey413C574C": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI0904/SecurityLayer/FABI0904PostRegistration/Code\""
    },
    "SecurityLayerFABI0904PostRegistrationCodeArtifactHash99779698": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI0904/SecurityLayer/FABI0904PostRegistration/Code\""
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeS3Bucket96B675B5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/Code\""
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeS3VersionKeyFB3A7CCA": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/Code\""
    },
    "SingletonLambda2c52540be74f3380bfba17cafee565b9CodeArtifactHashE654A616": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI0904/SingletonLambda2c52540be74f3380bfba17cafee565b9/Code\""
    },
    "ProcessingLayerFABI0904AllocateGamerFnCodeS3BucketD597F0F4": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI0904/ProcessingLayer/FABI0904AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904AllocateGamerFnCodeS3VersionKeyE1341B6A": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI0904/ProcessingLayer/FABI0904AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904AllocateGamerFnCodeArtifactHashA7FAF74C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI0904/ProcessingLayer/FABI0904AllocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904DeallocateGamerFnCodeS3BucketC9D29EC2": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI0904/ProcessingLayer/FABI0904DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904DeallocateGamerFnCodeS3VersionKeyDED81630": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI0904/ProcessingLayer/FABI0904DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904DeallocateGamerFnCodeArtifactHash7039D505": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI0904/ProcessingLayer/FABI0904DeallocateGamerFn/Code\""
    },
    "ProcessingLayerFABI0904ScoreboardFnCodeS3Bucket1CADA449": {
      "Type": "String",
      "Description": "S3 bucket for asset \"FABI0904/ProcessingLayer/FABI0904ScoreboardFn/Code\""
    },
    "ProcessingLayerFABI0904ScoreboardFnCodeS3VersionKey26DC9788": {
      "Type": "String",
      "Description": "S3 key for asset version \"FABI0904/ProcessingLayer/FABI0904ScoreboardFn/Code\""
    },
    "ProcessingLayerFABI0904ScoreboardFnCodeArtifactHash8973AFFB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"FABI0904/ProcessingLayer/FABI0904ScoreboardFn/Code\""
    }
  }
}